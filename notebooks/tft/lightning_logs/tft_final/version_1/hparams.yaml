attention_head_size: 4
categorical_groups: {}
causal_attention: true
dataset_parameters:
  add_encoder_length: false
  add_relative_time_idx: true
  add_target_scales: false
  allow_missing_timesteps: false
  categorical_encoders:
    DayOfWeek: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id006
        '0': 0
        '1': 1
        '2': 2
        '3': 3
        '4': 4
        '5': 5
        '6': 6
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - &id001 !!python/name:numpy.ndarray ''
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 7
        - !!python/object/apply:numpy.dtype
          args:
          - U1
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 4
          - 4
          - 8
        - false
        - !!binary |
          MAAAADEAAAAyAAAAMwAAADQAAAA1AAAANgAAAA==
      warn: true
    Description: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id007
        12 pencils small tube red spotty: 0
        12 pencils tall tube posy: 1
        12 pencils tall tube woodland: 2
        6 ribbons rustic charm: 3
        60 teatime fairy cake cases: 4
        72 sweetheart fairy cake cases: 5
        antique silver tea glass etched: 6
        assorted colour bird ornament: 7
        bag 500g swirly marbles: 8
        baking set 9 piece retrospot: 9
        baking set spaceboy design: 10
        bathroom metal sign: 11
        blue happy birthday bunting: 12
        blue harmonica in box: 13
        box of 24 cocktail parasols: 14
        charlotte bag suki design: 15
        childs apron spaceboy design: 16
        chocolate this way metal sign: 17
        colour glass tlight holder hanging: 18
        cook with wine metal sign: 19
        cream heart card holder: 20
        cream sweetheart mini chest: 21
        door mat fairy cake: 22
        door mat fancy font home sweet home: 23
        door mat new england: 24
        door mat spotty home sweet home: 25
        door mat union flag: 26
        doormat hearts: 27
        edwardian parasol natural: 28
        fancy font birthday card: 29
        feltcraft 6 flower friends: 30
        feltcraft butterfly hearts: 31
        feltcraft cushion owl: 32
        four hook white lovebirds: 33
        gin tonic diet metal sign: 34
        hand over the chocolate sign: 35
        hanging heart zinc tlight holder: 36
        hanging jam jar tlight holder: 37
        hanging metal star lantern: 38
        hot baths metal sign: 39
        ivory hanging decoration heart: 40
        jumbo bag baroque black white: 41
        jumbo bag pink vintage paisley: 42
        jumbo bag scandinavian paisley: 43
        jumbo bag spaceboy design: 44
        jumbo bag strawberry: 45
        jumbo bag toys: 46
        jumbo bag woodland animals: 47
        jumbo shopper vintage red paisley: 48
        jumbo storage bag skulls: 49
        large heart measuring spoons: 50
        love building block word: 51
        lovebird hanging decoration white: 52
        lunch bag black skull: 53
        lunch bag cars blue: 54
        lunch bag woodland: 55
        lunchbag spaceboy design: 56
        lunchbag suki design: 57
        lunchbox i love london: 58
        lunchbox with cutlery retrospot: 59
        memo board retrospot design: 60
        metal sign take it or leave it: 61
        mini cake stand hanging strawbery: 62
        natural slate chalkboard large: 63
        natural slate heart chalkboard: 64
        natural slate rectangle chalkboard: 65
        no singing metal sign: 66
        pack of 12 hearts design tissues: 67
        pack of 12 woodland tissues: 68
        pack of 6 birdy gift tags: 69
        pack of 60 dinosaur cake cases: 70
        pack of 60 mushroom cake cases: 71
        pack of 60 pink paisley cake cases: 72
        pack of 60 spaceboy cake cases: 73
        pack of 72 retro spot cake cases: 74
        pack of 72 skull cake cases: 75
        paper bunting retro spots: 76
        paper chain kit retro spot: 77
        party bunting: 78
        pink blue felt craft trinket box: 79
        pink fairy cake childs apron: 80
        plasters in tin circus parade: 81
        plasters in tin skulls: 82
        plasters in tin spaceboy: 83
        plasters in tin strongman: 84
        plasters in tin vintage paisley: 85
        plasters in tin woodland animals: 86
        pottering in the shed metal sign: 87
        recycling bag retrospot: 88
        red retrospot mug: 89
        red spot ceramic drawer knob: 90
        red spotty charlotte bag: 91
        red spotty round cake tins: 92
        red spotty shopper bag: 93
        red toadstool led night light: 94
        regency cakestand 3 tier: 95
        retro spot cake stand: 96
        retro spot large milk jug: 97
        retro spot small milk jug: 98
        retro spot tea set ceramic 11 pc: 99
        rex cashcarry jumbo shopper: 100
        ribbon reel spots design: 101
        round snack boxes set 4 fruits: 102
        round snack boxes set4 woodland: 103
        set 12 retro white chalk sticks: 104
        set of 3 butterfly cookie cutters: 105
        set of 3 heart cookie cutters: 106
        set of 72 pink heart paper doilies: 107
        set of 72 retro spot paper doilies: 108
        set10 pink spotty party candles: 109
        set2 red spotty tea towels: 110
        set20 red spotty paper napkins: 111
        set5 red spotty lid glass bowls: 112
        set6 red spotty paper cups: 113
        skull shoulder bag: 114
        small glass heart trinket pot: 115
        space boy birthday card: 116
        strawberry ceramic trinket box: 117
        strawberry charlotte bag: 118
        strawberry lunchbox with cutlery: 119
        sweetheart ceramic trinket box: 120
        tea bag plate red spotty: 121
        tea party birthday card: 122
        toilet metal sign: 123
        victorian glass hanging tlight: 124
        vintage heads and tails card game: 125
        vintage snap cards: 126
        vintage union jack bunting: 127
        white hanging heart tlight holder: 128
        white spot red ceramic drawer knob: 129
        white wood garden plant ladder: 130
        wood 2 drawer cabinet white finish: 131
        wood black board ant white finish: 132
        wood s3 cabinet ant white finish: 133
        wooden frame antique white: 134
        wooden happy birthday garland: 135
        wooden picture frame white finish: 136
        wooden rounders garden set: 137
        wooden school colouring set: 138
        woodland charlotte bag: 139
        world war 2 gliders asstd designs: 140
        zinc metal heart decoration: 141
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 142
        - !!python/object/apply:numpy.dtype
          args:
          - U35
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 140
          - 4
          - 8
        - false
        - !!binary |
          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
          IAAAAHMAAABpAAAAZwAAAG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAAAGwAAAB1AAAAZQAAACAAAABoAAAAYQAAAHAA
          AABwAAAAeQAAACAAAABiAAAAaQAAAHIAAAB0AAAAaAAAAGQAAABhAAAAeQAAACAAAABiAAAAdQAA
          AG4AAAB0AAAAaQAAAG4AAABnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiAAAA
          bAAAAHUAAABlAAAAIAAAAGgAAABhAAAAcgAAAG0AAABvAAAAbgAAAGkAAABjAAAAYQAAACAAAABp
          AAAAbgAAACAAAABiAAAAbwAAAHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIAAABvAAAAeAAAACAAAABvAAAAZgAAACAAAAAyAAAANAAA
          ACAAAABjAAAAbwAAAGMAAABrAAAAdAAAAGEAAABpAAAAbAAAACAAAABwAAAAYQAAAHIAAABhAAAA
          cwAAAG8AAABsAAAAcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYwAAAGgAAABh
          AAAAcgAAAGwAAABvAAAAdAAAAHQAAABlAAAAIAAAAGIAAABhAAAAZwAAACAAAABzAAAAdQAAAGsA
          AABpAAAAIAAAAGQAAABlAAAAcwAAAGkAAABnAAAAbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAABjAAAAaAAAAGkAAABsAAAAZAAAAHMAAAAgAAAAYQAAAHAAAAByAAAA
          bwAAAG4AAAAgAAAAcwAAAHAAAABhAAAAYwAAAGUAAABiAAAAbwAAAHkAAAAgAAAAZAAAAGUAAABz
          AAAAaQAAAGcAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGMAAABoAAAAbwAAAGMA
          AABvAAAAbAAAAGEAAAB0AAAAZQAAACAAAAB0AAAAaAAAAGkAAABzAAAAIAAAAHcAAABhAAAAeQAA
          ACAAAABtAAAAZQAAAHQAAABhAAAAbAAAACAAAABzAAAAaQAAAGcAAABuAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAYwAAAG8AAABsAAAAbwAAAHUAAAByAAAAIAAAAGcAAABsAAAAYQAAAHMAAABz
          AAAAIAAAAHQAAABsAAAAaQAAAGcAAABoAAAAdAAAACAAAABoAAAAbwAAAGwAAABkAAAAZQAAAHIA
          AAAgAAAAaAAAAGEAAABuAAAAZwAAAGkAAABuAAAAZwAAAAAAAABjAAAAbwAAAG8AAABrAAAAIAAA
          AHcAAABpAAAAdAAAAGgAAAAgAAAAdwAAAGkAAABuAAAAZQAAACAAAABtAAAAZQAAAHQAAABhAAAA
          bAAAACAAAABzAAAAaQAAAGcAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAGMAAAByAAAAZQAAAGEAAABtAAAAIAAAAGgAAABlAAAAYQAAAHIAAAB0AAAAIAAAAGMA
          AABhAAAAcgAAAGQAAAAgAAAAaAAAAG8AAABsAAAAZAAAAGUAAAByAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYwAAAHIAAABlAAAAYQAAAG0AAAAgAAAA
          cwAAAHcAAABlAAAAZQAAAHQAAABoAAAAZQAAAGEAAAByAAAAdAAAACAAAABtAAAAaQAAAG4AAABp
          AAAAIAAAAGMAAABoAAAAZQAAAHMAAAB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AABkAAAAbwAAAG8AAAByAAAAIAAAAG0AAABhAAAAdAAAACAAAABmAAAAYQAAAGkAAAByAAAAeQAA
          ACAAAABjAAAAYQAAAGsAAABlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQAAABvAAAAbwAAAHIAAAAgAAAAbQAAAGEAAAB0
          AAAAIAAAAGYAAABhAAAAbgAAAGMAAAB5AAAAIAAAAGYAAABvAAAAbgAAAHQAAAAgAAAAaAAAAG8A
          AABtAAAAZQAAACAAAABzAAAAdwAAAGUAAABlAAAAdAAAACAAAABoAAAAbwAAAG0AAABlAAAAZAAA
          AG8AAABvAAAAcgAAACAAAABtAAAAYQAAAHQAAAAgAAAAbgAAAGUAAAB3AAAAIAAAAGUAAABuAAAA
          ZwAAAGwAAABhAAAAbgAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkAAAAbwAAAG8AAAByAAAAIAAAAG0AAABhAAAAdAAAACAA
          AABzAAAAcAAAAG8AAAB0AAAAdAAAAHkAAAAgAAAAaAAAAG8AAABtAAAAZQAAACAAAABzAAAAdwAA
          AGUAAABlAAAAdAAAACAAAABoAAAAbwAAAG0AAABlAAAAAAAAAAAAAAAAAAAAAAAAAGQAAABvAAAA
          bwAAAHIAAAAgAAAAbQAAAGEAAAB0AAAAIAAAAHUAAABuAAAAaQAAAG8AAABuAAAAIAAAAGYAAABs
          AAAAYQAAAGcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAZAAAAG8AAABvAAAAcgAAAG0AAABhAAAAdAAAACAAAABoAAAAZQAA
          AGEAAAByAAAAdAAAAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABlAAAAZAAAAHcAAABh
          AAAAcgAAAGQAAABpAAAAYQAAAG4AAAAgAAAAcAAAAGEAAAByAAAAYQAAAHMAAABvAAAAbAAAACAA
          AABuAAAAYQAAAHQAAAB1AAAAcgAAAGEAAABsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAGYAAABhAAAAbgAAAGMAAAB5AAAAIAAAAGYAAABvAAAAbgAAAHQAAAAgAAAA
          YgAAAGkAAAByAAAAdAAAAGgAAABkAAAAYQAAAHkAAAAgAAAAYwAAAGEAAAByAAAAZAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZgAAAGUAAABsAAAAdAAAAGMA
          AAByAAAAYQAAAGYAAAB0AAAAIAAAADYAAAAgAAAAZgAAAGwAAABvAAAAdwAAAGUAAAByAAAAIAAA
          AGYAAAByAAAAaQAAAGUAAABuAAAAZAAAAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAABmAAAAZQAAAGwAAAB0AAAAYwAAAHIAAABhAAAAZgAAAHQAAAAgAAAAYgAAAHUAAAB0
          AAAAdAAAAGUAAAByAAAAZgAAAGwAAAB5AAAAIAAAAGgAAABlAAAAYQAAAHIAAAB0AAAAcwAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGYAAABlAAAAbAAAAHQAAABjAAAAcgAA
          AGEAAABmAAAAdAAAACAAAABjAAAAdQAAAHMAAABoAAAAaQAAAG8AAABuAAAAIAAAAG8AAAB3AAAA
          bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAZgAAAG8AAAB1AAAAcgAAACAAAABoAAAAbwAAAG8AAABrAAAAIAAAAHcAAABoAAAAaQAAAHQA
          AABlAAAAIAAAAGwAAABvAAAAdgAAAGUAAABiAAAAaQAAAHIAAABkAAAAcwAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABnAAAAaQAAAG4AAAAgAAAAdAAAAG8AAABuAAAA
          aQAAAGMAAAAgAAAAZAAAAGkAAABlAAAAdAAAACAAAABtAAAAZQAAAHQAAABhAAAAbAAAACAAAABz
          AAAAaQAAAGcAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgA
          AABhAAAAbgAAAGQAAAAgAAAAbwAAAHYAAABlAAAAcgAAACAAAAB0AAAAaAAAAGUAAAAgAAAAYwAA
          AGgAAABvAAAAYwAAAG8AAABsAAAAYQAAAHQAAABlAAAAIAAAAHMAAABpAAAAZwAAAG4AAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAAAGEAAABuAAAAZwAAAGkAAABuAAAAZwAAACAAAABo
          AAAAZQAAAGEAAAByAAAAdAAAACAAAAB6AAAAaQAAAG4AAABjAAAAIAAAAHQAAABsAAAAaQAAAGcA
          AABoAAAAdAAAACAAAABoAAAAbwAAAGwAAABkAAAAZQAAAHIAAAAAAAAAAAAAAAAAAABoAAAAYQAA
          AG4AAABnAAAAaQAAAG4AAABnAAAAIAAAAGoAAABhAAAAbQAAACAAAABqAAAAYQAAAHIAAAAgAAAA
          dAAAAGwAAABpAAAAZwAAAGgAAAB0AAAAIAAAAGgAAABvAAAAbAAAAGQAAABlAAAAcgAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAGgAAABhAAAAbgAAAGcAAABpAAAAbgAAAGcAAAAgAAAAbQAAAGUA
          AAB0AAAAYQAAAGwAAAAgAAAAcwAAAHQAAABhAAAAcgAAACAAAABsAAAAYQAAAG4AAAB0AAAAZQAA
          AHIAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAAAG8AAAB0AAAA
          IAAAAGIAAABhAAAAdAAAAGgAAABzAAAAIAAAAG0AAABlAAAAdAAAAGEAAABsAAAAIAAAAHMAAABp
          AAAAZwAAAG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAABpAAAAdgAAAG8AAAByAAAAeQAAACAAAABoAAAAYQAAAG4AAABnAAAAaQAA
          AG4AAABnAAAAIAAAAGQAAABlAAAAYwAAAG8AAAByAAAAYQAAAHQAAABpAAAAbwAAAG4AAAAgAAAA
          aAAAAGUAAABhAAAAcgAAAHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGoAAAB1AAAAbQAAAGIAAABv
          AAAAIAAAAGIAAABhAAAAZwAAACAAAABiAAAAYQAAAHIAAABvAAAAcQAAAHUAAABlAAAAIAAAAGIA
          AABsAAAAYQAAAGMAAABrAAAAIAAAAHcAAABoAAAAaQAAAHQAAABlAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAagAAAHUAAABtAAAAYgAAAG8AAAAgAAAAYgAAAGEAAABnAAAAIAAAAHAAAABpAAAA
          bgAAAGsAAAAgAAAAdgAAAGkAAABuAAAAdAAAAGEAAABnAAAAZQAAACAAAABwAAAAYQAAAGkAAABz
          AAAAbAAAAGUAAAB5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABqAAAAdQAAAG0AAABiAAAAbwAAACAA
          AABiAAAAYQAAAGcAAAAgAAAAcwAAAGMAAABhAAAAbgAAAGQAAABpAAAAbgAAAGEAAAB2AAAAaQAA
          AGEAAABuAAAAIAAAAHAAAABhAAAAaQAAAHMAAABsAAAAZQAAAHkAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAGoAAAB1AAAAbQAAAGIAAABvAAAAIAAAAGIAAABhAAAAZwAAACAAAABzAAAAcAAAAGEAAABj
          AAAAZQAAAGIAAABvAAAAeQAAACAAAABkAAAAZQAAAHMAAABpAAAAZwAAAG4AAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAagAAAHUAAABtAAAAYgAAAG8AAAAgAAAAYgAA
          AGEAAABnAAAAIAAAAHMAAAB0AAAAcgAAAGEAAAB3AAAAYgAAAGUAAAByAAAAcgAAAHkAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABq
          AAAAdQAAAG0AAABiAAAAbwAAACAAAABiAAAAYQAAAGcAAAAgAAAAdAAAAG8AAAB5AAAAcwAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGoAAAB1AAAAbQAAAGIAAABvAAAAIAAAAGIAAABhAAAA
          ZwAAACAAAAB3AAAAbwAAAG8AAABkAAAAbAAAAGEAAABuAAAAZAAAACAAAABhAAAAbgAAAGkAAABt
          AAAAYQAAAGwAAABzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAagAAAHUA
          AABtAAAAYgAAAG8AAAAgAAAAcwAAAGgAAABvAAAAcAAAAHAAAABlAAAAcgAAACAAAAB2AAAAaQAA
          AG4AAAB0AAAAYQAAAGcAAABlAAAAIAAAAHIAAABlAAAAZAAAACAAAABwAAAAYQAAAGkAAABzAAAA
          bAAAAGUAAAB5AAAAAAAAAAAAAABqAAAAdQAAAG0AAABiAAAAbwAAACAAAABzAAAAdAAAAG8AAABy
          AAAAYQAAAGcAAABlAAAAIAAAAGIAAABhAAAAZwAAACAAAABzAAAAawAAAHUAAABsAAAAbAAAAHMA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAAABhAAAAcgAA
          AGcAAABlAAAAIAAAAGgAAABlAAAAYQAAAHIAAAB0AAAAIAAAAG0AAABlAAAAYQAAAHMAAAB1AAAA
          cgAAAGkAAABuAAAAZwAAACAAAABzAAAAcAAAAG8AAABvAAAAbgAAAHMAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAbAAAAG8AAAB2AAAAZQAAACAAAABiAAAAdQAAAGkAAABsAAAAZAAAAGkA
          AABuAAAAZwAAACAAAABiAAAAbAAAAG8AAABjAAAAawAAACAAAAB3AAAAbwAAAHIAAABkAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAAAbwAAAHYAAABlAAAA
          YgAAAGkAAAByAAAAZAAAACAAAABoAAAAYQAAAG4AAABnAAAAaQAAAG4AAABnAAAAIAAAAGQAAABl
          AAAAYwAAAG8AAAByAAAAYQAAAHQAAABpAAAAbwAAAG4AAAAgAAAAdwAAAGgAAABpAAAAdAAAAGUA
          AAAAAAAAAAAAAGwAAAB1AAAAbgAAAGMAAABoAAAAIAAAAGIAAABhAAAAZwAAACAAAABiAAAAbAAA
          AGEAAABjAAAAawAAACAAAABzAAAAawAAAHUAAABsAAAAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAHUAAABuAAAAYwAAAGgAAAAg
          AAAAYgAAAGEAAABnAAAAIAAAAGMAAABhAAAAcgAAAHMAAAAgAAAAYgAAAGwAAAB1AAAAZQAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAABsAAAAdQAAAG4AAABjAAAAaAAAACAAAABiAAAAYQAAAGcAAAAgAAAAdwAAAG8AAABvAAAA
          ZAAAAGwAAABhAAAAbgAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAAAB1AAAAbgAAAGMAAABoAAAAYgAAAGEA
          AABnAAAAIAAAAHMAAABwAAAAYQAAAGMAAABlAAAAYgAAAG8AAAB5AAAAIAAAAGQAAABlAAAAcwAA
          AGkAAABnAAAAbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          bAAAAHUAAABuAAAAYwAAAGgAAABiAAAAYQAAAGcAAAAgAAAAcwAAAHUAAABrAAAAaQAAACAAAABk
          AAAAZQAAAHMAAABpAAAAZwAAAG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAAAdQAAAG4AAABjAAAAaAAAAGIAAABvAAAAeAAA
          ACAAAABpAAAAIAAAAGwAAABvAAAAdgAAAGUAAAAgAAAAbAAAAG8AAABuAAAAZAAAAG8AAABuAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAAAB1
          AAAAbgAAAGMAAABoAAAAYgAAAG8AAAB4AAAAIAAAAHcAAABpAAAAdAAAAGgAAAAgAAAAYwAAAHUA
          AAB0AAAAbAAAAGUAAAByAAAAeQAAACAAAAByAAAAZQAAAHQAAAByAAAAbwAAAHMAAABwAAAAbwAA
          AHQAAAAAAAAAAAAAAAAAAAAAAAAAbQAAAGUAAABtAAAAbwAAACAAAABiAAAAbwAAAGEAAAByAAAA
          ZAAAACAAAAByAAAAZQAAAHQAAAByAAAAbwAAAHMAAABwAAAAbwAAAHQAAAAgAAAAZAAAAGUAAABz
          AAAAaQAAAGcAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABtAAAAZQAAAHQA
          AABhAAAAbAAAACAAAABzAAAAaQAAAGcAAABuAAAAIAAAAHQAAABhAAAAawAAAGUAAAAgAAAAaQAA
          AHQAAAAgAAAAbwAAAHIAAAAgAAAAbAAAAGUAAABhAAAAdgAAAGUAAAAgAAAAaQAAAHQAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAG0AAABpAAAAbgAAAGkAAAAgAAAAYwAAAGEAAABrAAAAZQAAACAAAABz
          AAAAdAAAAGEAAABuAAAAZAAAACAAAABoAAAAYQAAAG4AAABnAAAAaQAAAG4AAABnAAAAIAAAAHMA
          AAB0AAAAcgAAAGEAAAB3AAAAYgAAAGUAAAByAAAAeQAAAAAAAAAAAAAAbgAAAGEAAAB0AAAAdQAA
          AHIAAABhAAAAbAAAACAAAABzAAAAbAAAAGEAAAB0AAAAZQAAACAAAABjAAAAaAAAAGEAAABsAAAA
          awAAAGIAAABvAAAAYQAAAHIAAABkAAAAIAAAAGwAAABhAAAAcgAAAGcAAABlAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAABuAAAAYQAAAHQAAAB1AAAAcgAAAGEAAABsAAAAIAAAAHMAAABsAAAAYQAAAHQA
          AABlAAAAIAAAAGgAAABlAAAAYQAAAHIAAAB0AAAAIAAAAGMAAABoAAAAYQAAAGwAAABrAAAAYgAA
          AG8AAABhAAAAcgAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG4AAABhAAAAdAAAAHUAAAByAAAA
          YQAAAGwAAAAgAAAAcwAAAGwAAABhAAAAdAAAAGUAAAAgAAAAcgAAAGUAAABjAAAAdAAAAGEAAABu
          AAAAZwAAAGwAAABlAAAAIAAAAGMAAABoAAAAYQAAAGwAAABrAAAAYgAAAG8AAABhAAAAcgAAAGQA
          AAAAAAAAbgAAAG8AAAAgAAAAcwAAAGkAAABuAAAAZwAAAGkAAABuAAAAZwAAACAAAABtAAAAZQAA
          AHQAAABhAAAAbAAAACAAAABzAAAAaQAAAGcAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAYQAAAGMAAABrAAAAIAAAAG8AAABm
          AAAAIAAAADEAAAAyAAAAIAAAAGgAAABlAAAAYQAAAHIAAAB0AAAAcwAAACAAAABkAAAAZQAAAHMA
          AABpAAAAZwAAAG4AAAAgAAAAdAAAAGkAAABzAAAAcwAAAHUAAABlAAAAcwAAAAAAAAAAAAAAAAAA
          AHAAAABhAAAAYwAAAGsAAAAgAAAAbwAAAGYAAAAgAAAAMQAAADIAAAAgAAAAdwAAAG8AAABvAAAA
          ZAAAAGwAAABhAAAAbgAAAGQAAAAgAAAAdAAAAGkAAABzAAAAcwAAAHUAAABlAAAAcwAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAAGEAAABjAAAAawAAACAAAABvAAAAZgAAACAA
          AAA2AAAAIAAAAGIAAABpAAAAcgAAAGQAAAB5AAAAIAAAAGcAAABpAAAAZgAAAHQAAAAgAAAAdAAA
          AGEAAABnAAAAcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAA
          YQAAAGMAAABrAAAAIAAAAG8AAABmAAAAIAAAADYAAAAwAAAAIAAAAGQAAABpAAAAbgAAAG8AAABz
          AAAAYQAAAHUAAAByAAAAIAAAAGMAAABhAAAAawAAAGUAAAAgAAAAYwAAAGEAAABzAAAAZQAAAHMA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAABhAAAAYwAAAGsAAAAgAAAAbwAAAGYAAAAgAAAANgAA
          ADAAAAAgAAAAbQAAAHUAAABzAAAAaAAAAHIAAABvAAAAbwAAAG0AAAAgAAAAYwAAAGEAAABrAAAA
          ZQAAACAAAABjAAAAYQAAAHMAAABlAAAAcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAAGEAAABj
          AAAAawAAACAAAABvAAAAZgAAACAAAAA2AAAAMAAAACAAAABwAAAAaQAAAG4AAABrAAAAIAAAAHAA
          AABhAAAAaQAAAHMAAABsAAAAZQAAAHkAAAAgAAAAYwAAAGEAAABrAAAAZQAAACAAAABjAAAAYQAA
          AHMAAABlAAAAcwAAAAAAAABwAAAAYQAAAGMAAABrAAAAIAAAAG8AAABmAAAAIAAAADYAAAAwAAAA
          IAAAAHMAAABwAAAAYQAAAGMAAABlAAAAYgAAAG8AAAB5AAAAIAAAAGMAAABhAAAAawAAAGUAAAAg
          AAAAYwAAAGEAAABzAAAAZQAAAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAABhAAAAYwAAAGsA
          AAAgAAAAbwAAAGYAAAAgAAAANwAAADIAAAAgAAAAcgAAAGUAAAB0AAAAcgAAAG8AAAAgAAAAcwAA
          AHAAAABvAAAAdAAAACAAAABjAAAAYQAAAGsAAABlAAAAIAAAAGMAAABhAAAAcwAAAGUAAABzAAAA
          AAAAAAAAAAAAAAAAcAAAAGEAAABjAAAAawAAACAAAABvAAAAZgAAACAAAAA3AAAAMgAAACAAAABz
          AAAAawAAAHUAAABsAAAAbAAAACAAAABjAAAAYQAAAGsAAABlAAAAIAAAAGMAAABhAAAAcwAAAGUA
          AABzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAYQAAAHAAAABlAAAAcgAA
          ACAAAABiAAAAdQAAAG4AAAB0AAAAaQAAAG4AAABnAAAAIAAAAHIAAABlAAAAdAAAAHIAAABvAAAA
          IAAAAHMAAABwAAAAbwAAAHQAAABzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAHAAAABhAAAAcAAAAGUAAAByAAAAIAAAAGMAAABoAAAAYQAAAGkAAABuAAAAIAAAAGsA
          AABpAAAAdAAAACAAAAByAAAAZQAAAHQAAAByAAAAbwAAACAAAABzAAAAcAAAAG8AAAB0AAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAAGEAAAByAAAAdAAAAHkAAAAgAAAA
          YgAAAHUAAABuAAAAdAAAAGkAAABuAAAAZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AABwAAAAaQAAAG4AAABrAAAAIAAAAGIAAABsAAAAdQAAAGUAAAAgAAAAZgAAAGUAAABsAAAAdAAA
          ACAAAABjAAAAcgAAAGEAAABmAAAAdAAAACAAAAB0AAAAcgAAAGkAAABuAAAAawAAAGUAAAB0AAAA
          IAAAAGIAAABvAAAAeAAAAAAAAAAAAAAAAAAAAHAAAABpAAAAbgAAAGsAAAAgAAAAZgAAAGEAAABp
          AAAAcgAAAHkAAAAgAAAAYwAAAGEAAABrAAAAZQAAACAAAABjAAAAaAAAAGkAAABsAAAAZAAAAHMA
          AAAgAAAAYQAAAHAAAAByAAAAbwAAAG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAA
          AGwAAABhAAAAcwAAAHQAAABlAAAAcgAAAHMAAAAgAAAAaQAAAG4AAAAgAAAAdAAAAGkAAABuAAAA
          IAAAAGMAAABpAAAAcgAAAGMAAAB1AAAAcwAAACAAAABwAAAAYQAAAHIAAABhAAAAZAAAAGUAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAbAAAAGEAAABzAAAAdAAAAGUAAAByAAAAcwAAACAA
          AABpAAAAbgAAACAAAAB0AAAAaQAAAG4AAAAgAAAAcwAAAGsAAAB1AAAAbAAAAGwAAABzAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAABsAAAA
          YQAAAHMAAAB0AAAAZQAAAHIAAABzAAAAIAAAAGkAAABuAAAAIAAAAHQAAABpAAAAbgAAACAAAABz
          AAAAcAAAAGEAAABjAAAAZQAAAGIAAABvAAAAeQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAcAAAAGwAAABhAAAAcwAAAHQAAABlAAAAcgAAAHMAAAAgAAAAaQAA
          AG4AAAAgAAAAdAAAAGkAAABuAAAAIAAAAHMAAAB0AAAAcgAAAG8AAABuAAAAZwAAAG0AAABhAAAA
          bgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAbAAAAGEAAABz
          AAAAdAAAAGUAAAByAAAAcwAAACAAAABpAAAAbgAAACAAAAB0AAAAaQAAAG4AAAAgAAAAdgAAAGkA
          AABuAAAAdAAAAGEAAABnAAAAZQAAACAAAABwAAAAYQAAAGkAAABzAAAAbAAAAGUAAAB5AAAAAAAA
          AAAAAAAAAAAAAAAAAHAAAABsAAAAYQAAAHMAAAB0AAAAZQAAAHIAAABzAAAAIAAAAGkAAABuAAAA
          IAAAAHQAAABpAAAAbgAAACAAAAB3AAAAbwAAAG8AAABkAAAAbAAAAGEAAABuAAAAZAAAACAAAABh
          AAAAbgAAAGkAAABtAAAAYQAAAGwAAABzAAAAAAAAAAAAAAAAAAAAcAAAAG8AAAB0AAAAdAAAAGUA
          AAByAAAAaQAAAG4AAABnAAAAIAAAAGkAAABuAAAAIAAAAHQAAABoAAAAZQAAACAAAABzAAAAaAAA
          AGUAAABkAAAAIAAAAG0AAABlAAAAdAAAAGEAAABsAAAAIAAAAHMAAABpAAAAZwAAAG4AAAAAAAAA
          AAAAAAAAAAByAAAAZQAAAGMAAAB5AAAAYwAAAGwAAABpAAAAbgAAAGcAAAAgAAAAYgAAAGEAAABn
          AAAAIAAAAHIAAABlAAAAdAAAAHIAAABvAAAAcwAAAHAAAABvAAAAdAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHIAAABlAAAAZAAAACAAAAByAAAAZQAA
          AHQAAAByAAAAbwAAAHMAAABwAAAAbwAAAHQAAAAgAAAAbQAAAHUAAABnAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAcgAAAGUAAABkAAAAIAAAAHMAAABwAAAAbwAAAHQAAAAgAAAAYwAAAGUAAAByAAAAYQAAAG0A
          AABpAAAAYwAAACAAAABkAAAAcgAAAGEAAAB3AAAAZQAAAHIAAAAgAAAAawAAAG4AAABvAAAAYgAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAByAAAAZQAAAGQAAAAgAAAAcwAAAHAAAABvAAAA
          dAAAAHQAAAB5AAAAIAAAAGMAAABoAAAAYQAAAHIAAABsAAAAbwAAAHQAAAB0AAAAZQAAACAAAABi
          AAAAYQAAAGcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHIA
          AABlAAAAZAAAACAAAABzAAAAcAAAAG8AAAB0AAAAdAAAAHkAAAAgAAAAcgAAAG8AAAB1AAAAbgAA
          AGQAAAAgAAAAYwAAAGEAAABrAAAAZQAAACAAAAB0AAAAaQAAAG4AAABzAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcgAAAGUAAABkAAAAIAAAAHMAAABwAAAAbwAAAHQAAAB0
          AAAAeQAAACAAAABzAAAAaAAAAG8AAABwAAAAcAAAAGUAAAByAAAAIAAAAGIAAABhAAAAZwAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAByAAAAZQAA
          AGQAAAAgAAAAdAAAAG8AAABhAAAAZAAAAHMAAAB0AAAAbwAAAG8AAABsAAAAIAAAAGwAAABlAAAA
          ZAAAACAAAABuAAAAaQAAAGcAAABoAAAAdAAAACAAAABsAAAAaQAAAGcAAABoAAAAdAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAHIAAABlAAAAZwAAAGUAAABuAAAAYwAAAHkAAAAgAAAAYwAAAGEA
          AABrAAAAZQAAAHMAAAB0AAAAYQAAAG4AAABkAAAAIAAAADMAAAAgAAAAdAAAAGkAAABlAAAAcgAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcgAAAGUAAAB0AAAA
          cgAAAG8AAAAgAAAAcwAAAHAAAABvAAAAdAAAACAAAABjAAAAYQAAAGsAAABlAAAAIAAAAHMAAAB0
          AAAAYQAAAG4AAABkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAByAAAAZQAAAHQAAAByAAAAbwAAACAAAABzAAAAcAAAAG8AAAB0AAAAIAAA
          AGwAAABhAAAAcgAAAGcAAABlAAAAIAAAAG0AAABpAAAAbAAAAGsAAAAgAAAAagAAAHUAAABnAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHIAAABlAAAAdAAAAHIAAABv
          AAAAIAAAAHMAAABwAAAAbwAAAHQAAAAgAAAAcwAAAG0AAABhAAAAbAAAAGwAAAAgAAAAbQAAAGkA
          AABsAAAAawAAACAAAABqAAAAdQAAAGcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAcgAAAGUAAAB0AAAAcgAAAG8AAAAgAAAAcwAAAHAAAABvAAAAdAAAACAAAAB0AAAA
          ZQAAAGEAAAAgAAAAcwAAAGUAAAB0AAAAIAAAAGMAAABlAAAAcgAAAGEAAABtAAAAaQAAAGMAAAAg
          AAAAMQAAADEAAAAgAAAAcAAAAGMAAAAAAAAAAAAAAAAAAAByAAAAZQAAAHgAAAAgAAAAYwAAAGEA
          AABzAAAAaAAAAGMAAABhAAAAcgAAAHIAAAB5AAAAIAAAAGoAAAB1AAAAbQAAAGIAAABvAAAAIAAA
          AHMAAABoAAAAbwAAAHAAAABwAAAAZQAAAHIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAHIAAABpAAAAYgAAAGIAAABvAAAAbgAAACAAAAByAAAAZQAAAGUAAABsAAAAIAAAAHMAAABw
          AAAAbwAAAHQAAABzAAAAIAAAAGQAAABlAAAAcwAAAGkAAABnAAAAbgAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcgAAAG8AAAB1AAAAbgAAAGQAAAAgAAAAcwAA
          AG4AAABhAAAAYwAAAGsAAAAgAAAAYgAAAG8AAAB4AAAAZQAAAHMAAAAgAAAAcwAAAGUAAAB0AAAA
          IAAAADQAAAAgAAAAZgAAAHIAAAB1AAAAaQAAAHQAAABzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABy
          AAAAbwAAAHUAAABuAAAAZAAAACAAAABzAAAAbgAAAGEAAABjAAAAawAAACAAAABiAAAAbwAAAHgA
          AABlAAAAcwAAACAAAABzAAAAZQAAAHQAAAA0AAAAIAAAAHcAAABvAAAAbwAAAGQAAABsAAAAYQAA
          AG4AAABkAAAAAAAAAAAAAAAAAAAAAAAAAHMAAABlAAAAdAAAACAAAAAxAAAAMgAAACAAAAByAAAA
          ZQAAAHQAAAByAAAAbwAAACAAAAB3AAAAaAAAAGkAAAB0AAAAZQAAACAAAABjAAAAaAAAAGEAAABs
          AAAAawAAACAAAABzAAAAdAAAAGkAAABjAAAAawAAAHMAAAAAAAAAAAAAAAAAAAAAAAAAcwAAAGUA
          AAB0AAAAIAAAAG8AAABmAAAAIAAAADMAAAAgAAAAYgAAAHUAAAB0AAAAdAAAAGUAAAByAAAAZgAA
          AGwAAAB5AAAAIAAAAGMAAABvAAAAbwAAAGsAAABpAAAAZQAAACAAAABjAAAAdQAAAHQAAAB0AAAA
          ZQAAAHIAAABzAAAAAAAAAAAAAABzAAAAZQAAAHQAAAAgAAAAbwAAAGYAAAAgAAAAMwAAACAAAABo
          AAAAZQAAAGEAAAByAAAAdAAAACAAAABjAAAAbwAAAG8AAABrAAAAaQAAAGUAAAAgAAAAYwAAAHUA
          AAB0AAAAdAAAAGUAAAByAAAAcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHMAAABlAAAAdAAA
          ACAAAABvAAAAZgAAACAAAAA3AAAAMgAAACAAAABwAAAAaQAAAG4AAABrAAAAIAAAAGgAAABlAAAA
          YQAAAHIAAAB0AAAAIAAAAHAAAABhAAAAcAAAAGUAAAByAAAAIAAAAGQAAABvAAAAaQAAAGwAAABp
          AAAAZQAAAHMAAAAAAAAAcwAAAGUAAAB0AAAAIAAAAG8AAABmAAAAIAAAADcAAAAyAAAAIAAAAHIA
          AABlAAAAdAAAAHIAAABvAAAAIAAAAHMAAABwAAAAbwAAAHQAAAAgAAAAcAAAAGEAAABwAAAAZQAA
          AHIAAAAgAAAAZAAAAG8AAABpAAAAbAAAAGkAAABlAAAAcwAAAAAAAABzAAAAZQAAAHQAAAAxAAAA
          MAAAACAAAABwAAAAaQAAAG4AAABrAAAAIAAAAHMAAABwAAAAbwAAAHQAAAB0AAAAeQAAACAAAABw
          AAAAYQAAAHIAAAB0AAAAeQAAACAAAABjAAAAYQAAAG4AAABkAAAAbAAAAGUAAABzAAAAAAAAAAAA
          AAAAAAAAAAAAAHMAAABlAAAAdAAAADIAAAAgAAAAcgAAAGUAAABkAAAAIAAAAHMAAABwAAAAbwAA
          AHQAAAB0AAAAeQAAACAAAAB0AAAAZQAAAGEAAAAgAAAAdAAAAG8AAAB3AAAAZQAAAGwAAABzAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcwAAAGUAAAB0AAAAMgAAADAAAAAg
          AAAAcgAAAGUAAABkAAAAIAAAAHMAAABwAAAAbwAAAHQAAAB0AAAAeQAAACAAAABwAAAAYQAAAHAA
          AABlAAAAcgAAACAAAABuAAAAYQAAAHAAAABrAAAAaQAAAG4AAABzAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAABzAAAAZQAAAHQAAAA1AAAAIAAAAHIAAABlAAAAZAAAACAAAABzAAAAcAAAAG8AAAB0AAAA
          dAAAAHkAAAAgAAAAbAAAAGkAAABkAAAAIAAAAGcAAABsAAAAYQAAAHMAAABzAAAAIAAAAGIAAABv
          AAAAdwAAAGwAAABzAAAAAAAAAAAAAAAAAAAAAAAAAHMAAABlAAAAdAAAADYAAAAgAAAAcgAAAGUA
          AABkAAAAIAAAAHMAAABwAAAAbwAAAHQAAAB0AAAAeQAAACAAAABwAAAAYQAAAHAAAABlAAAAcgAA
          ACAAAABjAAAAdQAAAHAAAABzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          cwAAAGsAAAB1AAAAbAAAAGwAAAAgAAAAcwAAAGgAAABvAAAAdQAAAGwAAABkAAAAZQAAAHIAAAAg
          AAAAYgAAAGEAAABnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABzAAAAbQAAAGEAAABsAAAAbAAAACAAAABnAAAAbAAA
          AGEAAABzAAAAcwAAACAAAABoAAAAZQAAAGEAAAByAAAAdAAAACAAAAB0AAAAcgAAAGkAAABuAAAA
          awAAAGUAAAB0AAAAIAAAAHAAAABvAAAAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHMAAABw
          AAAAYQAAAGMAAABlAAAAIAAAAGIAAABvAAAAeQAAACAAAABiAAAAaQAAAHIAAAB0AAAAaAAAAGQA
          AABhAAAAeQAAACAAAABjAAAAYQAAAHIAAABkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAcwAAAHQAAAByAAAAYQAAAHcAAABiAAAAZQAAAHIAAAByAAAA
          eQAAACAAAABjAAAAZQAAAHIAAABhAAAAbQAAAGkAAABjAAAAIAAAAHQAAAByAAAAaQAAAG4AAABr
          AAAAZQAAAHQAAAAgAAAAYgAAAG8AAAB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABzAAAAdAAAAHIA
          AABhAAAAdwAAAGIAAABlAAAAcgAAAHIAAAB5AAAAIAAAAGMAAABoAAAAYQAAAHIAAABsAAAAbwAA
          AHQAAAB0AAAAZQAAACAAAABiAAAAYQAAAGcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAHMAAAB0AAAAcgAAAGEAAAB3AAAAYgAAAGUAAAByAAAAcgAAAHkAAAAg
          AAAAbAAAAHUAAABuAAAAYwAAAGgAAABiAAAAbwAAAHgAAAAgAAAAdwAAAGkAAAB0AAAAaAAAACAA
          AABjAAAAdQAAAHQAAABsAAAAZQAAAHIAAAB5AAAAAAAAAAAAAAAAAAAAcwAAAHcAAABlAAAAZQAA
          AHQAAABoAAAAZQAAAGEAAAByAAAAdAAAACAAAABjAAAAZQAAAHIAAABhAAAAbQAAAGkAAABjAAAA
          IAAAAHQAAAByAAAAaQAAAG4AAABrAAAAZQAAAHQAAAAgAAAAYgAAAG8AAAB4AAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAB0AAAAZQAAAGEAAAAgAAAAYgAAAGEAAABnAAAAIAAAAHAAAABsAAAAYQAAAHQA
          AABlAAAAIAAAAHIAAABlAAAAZAAAACAAAABzAAAAcAAAAG8AAAB0AAAAdAAAAHkAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQAAABlAAAAYQAAACAAAABwAAAA
          YQAAAHIAAAB0AAAAeQAAACAAAABiAAAAaQAAAHIAAAB0AAAAaAAAAGQAAABhAAAAeQAAACAAAABj
          AAAAYQAAAHIAAABkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAdAAAAG8AAABpAAAAbAAAAGUAAAB0AAAAIAAAAG0AAABlAAAAdAAAAGEAAABsAAAAIAAA
          AHMAAABpAAAAZwAAAG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2AAAAaQAAAGMAAAB0AAAAbwAAAHIAAABp
          AAAAYQAAAG4AAAAgAAAAZwAAAGwAAABhAAAAcwAAAHMAAAAgAAAAaAAAAGEAAABuAAAAZwAAAGkA
          AABuAAAAZwAAACAAAAB0AAAAbAAAAGkAAABnAAAAaAAAAHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AHYAAABpAAAAbgAAAHQAAABhAAAAZwAAAGUAAAAgAAAAaAAAAGUAAABhAAAAZAAAAHMAAAAgAAAA
          YQAAAG4AAABkAAAAIAAAAHQAAABhAAAAaQAAAGwAAABzAAAAIAAAAGMAAABhAAAAcgAAAGQAAAAg
          AAAAZwAAAGEAAABtAAAAZQAAAAAAAAAAAAAAdgAAAGkAAABuAAAAdAAAAGEAAABnAAAAZQAAACAA
          AABzAAAAbgAAAGEAAABwAAAAIAAAAGMAAABhAAAAcgAAAGQAAABzAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2AAAA
          aQAAAG4AAAB0AAAAYQAAAGcAAABlAAAAIAAAAHUAAABuAAAAaQAAAG8AAABuAAAAIAAAAGoAAABh
          AAAAYwAAAGsAAAAgAAAAYgAAAHUAAABuAAAAdAAAAGkAAABuAAAAZwAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHcAAABoAAAAaQAAAHQAAABlAAAAIAAAAGgAAABhAAAAbgAA
          AGcAAABpAAAAbgAAAGcAAAAgAAAAaAAAAGUAAABhAAAAcgAAAHQAAAAgAAAAdAAAAGwAAABpAAAA
          ZwAAAGgAAAB0AAAAIAAAAGgAAABvAAAAbAAAAGQAAABlAAAAcgAAAAAAAAAAAAAAdwAAAGgAAABp
          AAAAdAAAAGUAAAAgAAAAcwAAAHAAAABvAAAAdAAAACAAAAByAAAAZQAAAGQAAAAgAAAAYwAAAGUA
          AAByAAAAYQAAAG0AAABpAAAAYwAAACAAAABkAAAAcgAAAGEAAAB3AAAAZQAAAHIAAAAgAAAAawAA
          AG4AAABvAAAAYgAAAAAAAAB3AAAAaAAAAGkAAAB0AAAAZQAAACAAAAB3AAAAbwAAAG8AAABkAAAA
          IAAAAGcAAABhAAAAcgAAAGQAAABlAAAAbgAAACAAAABwAAAAbAAAAGEAAABuAAAAdAAAACAAAABs
          AAAAYQAAAGQAAABkAAAAZQAAAHIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHcAAABvAAAAbwAAAGQA
          AAAgAAAAMgAAACAAAABkAAAAcgAAAGEAAAB3AAAAZQAAAHIAAAAgAAAAYwAAAGEAAABiAAAAaQAA
          AG4AAABlAAAAdAAAACAAAAB3AAAAaAAAAGkAAAB0AAAAZQAAACAAAABmAAAAaQAAAG4AAABpAAAA
          cwAAAGgAAAAAAAAAdwAAAG8AAABvAAAAZAAAACAAAABiAAAAbAAAAGEAAABjAAAAawAAACAAAABi
          AAAAbwAAAGEAAAByAAAAZAAAACAAAABhAAAAbgAAAHQAAAAgAAAAdwAAAGgAAABpAAAAdAAAAGUA
          AAAgAAAAZgAAAGkAAABuAAAAaQAAAHMAAABoAAAAAAAAAAAAAAB3AAAAbwAAAG8AAABkAAAAIAAA
          AHMAAAAzAAAAIAAAAGMAAABhAAAAYgAAAGkAAABuAAAAZQAAAHQAAAAgAAAAYQAAAG4AAAB0AAAA
          IAAAAHcAAABoAAAAaQAAAHQAAABlAAAAIAAAAGYAAABpAAAAbgAAAGkAAABzAAAAaAAAAAAAAAAA
          AAAAAAAAAHcAAABvAAAAbwAAAGQAAABlAAAAbgAAACAAAABmAAAAcgAAAGEAAABtAAAAZQAAACAA
          AABhAAAAbgAAAHQAAABpAAAAcQAAAHUAAABlAAAAIAAAAHcAAABoAAAAaQAAAHQAAABlAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdwAAAG8AAABvAAAAZAAAAGUAAABuAAAA
          IAAAAGgAAABhAAAAcAAAAHAAAAB5AAAAIAAAAGIAAABpAAAAcgAAAHQAAABoAAAAZAAAAGEAAAB5
          AAAAIAAAAGcAAABhAAAAcgAAAGwAAABhAAAAbgAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAB3AAAAbwAAAG8AAABkAAAAZQAAAG4AAAAgAAAAcAAAAGkAAABjAAAAdAAAAHUAAAByAAAAZQAA
          ACAAAABmAAAAcgAAAGEAAABtAAAAZQAAACAAAAB3AAAAaAAAAGkAAAB0AAAAZQAAACAAAABmAAAA
          aQAAAG4AAABpAAAAcwAAAGgAAAAAAAAAAAAAAHcAAABvAAAAbwAAAGQAAABlAAAAbgAAACAAAABy
          AAAAbwAAAHUAAABuAAAAZAAAAGUAAAByAAAAcwAAACAAAABnAAAAYQAAAHIAAABkAAAAZQAAAG4A
          AAAgAAAAcwAAAGUAAAB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdwAA
          AG8AAABvAAAAZAAAAGUAAABuAAAAIAAAAHMAAABjAAAAaAAAAG8AAABvAAAAbAAAACAAAABjAAAA
          bwAAAGwAAABvAAAAdQAAAHIAAABpAAAAbgAAAGcAAAAgAAAAcwAAAGUAAAB0AAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB3AAAAbwAAAG8AAABkAAAAbAAAAGEAAABuAAAAZAAAACAA
          AABjAAAAaAAAAGEAAAByAAAAbAAAAG8AAAB0AAAAdAAAAGUAAAAgAAAAYgAAAGEAAABnAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHcAAABvAAAA
          cgAAAGwAAABkAAAAIAAAAHcAAABhAAAAcgAAACAAAAAyAAAAIAAAAGcAAABsAAAAaQAAAGQAAABl
          AAAAcgAAAHMAAAAgAAAAYQAAAHMAAABzAAAAdAAAAGQAAAAgAAAAZAAAAGUAAABzAAAAaQAAAGcA
          AABuAAAAcwAAAAAAAAAAAAAAegAAAGkAAABuAAAAYwAAACAAAABtAAAAZQAAAHQAAABhAAAAbAAA
          ACAAAABoAAAAZQAAAGEAAAByAAAAdAAAACAAAABkAAAAZQAAAGMAAABvAAAAcgAAAGEAAAB0AAAA
          aQAAAG8AAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
      warn: true
    IsHoliday: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id008
        '0': 0
        '1': 1
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 2
        - !!python/object/apply:numpy.dtype
          args:
          - U1
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 4
          - 4
          - 8
        - false
        - !!binary |
          MAAAADEAAAA=
      warn: true
    IsWeekend: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id009
        '0': 0
        '1': 1
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 2
        - !!python/object/apply:numpy.dtype
          args:
          - U1
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 4
          - 4
          - 8
        - false
        - !!binary |
          MAAAADEAAAA=
      warn: true
    Month: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id010
        '0': 0
        '1': 1
        '10': 2
        '11': 3
        '2': 4
        '3': 5
        '4': 6
        '5': 7
        '6': 8
        '7': 9
        '8': 10
        '9': 11
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 12
        - !!python/object/apply:numpy.dtype
          args:
          - U2
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 8
          - 4
          - 8
        - false
        - !!binary |
          MAAAAAAAAAAxAAAAAAAAADEAAAAwAAAAMQAAADEAAAAyAAAAAAAAADMAAAAAAAAANAAAAAAAAAA1
          AAAAAAAAADYAAAAAAAAANwAAAAAAAAA4AAAAAAAAADkAAAAAAAAA
      warn: true
    Quarter: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id011
        '0': 0
        '1': 1
        '2': 2
        '3': 3
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 4
        - !!python/object/apply:numpy.dtype
          args:
          - U1
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 4
          - 4
          - 8
        - false
        - !!binary |
          MAAAADEAAAAyAAAAMwAAAA==
      warn: true
    __group_id__Description: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_:
        12 pencils small tube red spotty: 0
        12 pencils tall tube posy: 1
        12 pencils tall tube woodland: 2
        6 ribbons rustic charm: 3
        60 teatime fairy cake cases: 4
        72 sweetheart fairy cake cases: 5
        antique silver tea glass etched: 6
        assorted colour bird ornament: 7
        bag 500g swirly marbles: 8
        baking set 9 piece retrospot: 9
        baking set spaceboy design: 10
        bathroom metal sign: 11
        blue happy birthday bunting: 12
        blue harmonica in box: 13
        box of 24 cocktail parasols: 14
        charlotte bag suki design: 15
        childs apron spaceboy design: 16
        chocolate this way metal sign: 17
        colour glass tlight holder hanging: 18
        cook with wine metal sign: 19
        cream heart card holder: 20
        cream sweetheart mini chest: 21
        door mat fairy cake: 22
        door mat fancy font home sweet home: 23
        door mat new england: 24
        door mat spotty home sweet home: 25
        door mat union flag: 26
        doormat hearts: 27
        edwardian parasol natural: 28
        fancy font birthday card: 29
        feltcraft 6 flower friends: 30
        feltcraft butterfly hearts: 31
        feltcraft cushion owl: 32
        four hook white lovebirds: 33
        gin tonic diet metal sign: 34
        hand over the chocolate sign: 35
        hanging heart zinc tlight holder: 36
        hanging jam jar tlight holder: 37
        hanging metal star lantern: 38
        hot baths metal sign: 39
        ivory hanging decoration heart: 40
        jumbo bag baroque black white: 41
        jumbo bag pink vintage paisley: 42
        jumbo bag scandinavian paisley: 43
        jumbo bag spaceboy design: 44
        jumbo bag strawberry: 45
        jumbo bag toys: 46
        jumbo bag woodland animals: 47
        jumbo shopper vintage red paisley: 48
        jumbo storage bag skulls: 49
        large heart measuring spoons: 50
        love building block word: 51
        lovebird hanging decoration white: 52
        lunch bag black skull: 53
        lunch bag cars blue: 54
        lunch bag woodland: 55
        lunchbag spaceboy design: 56
        lunchbag suki design: 57
        lunchbox i love london: 58
        lunchbox with cutlery retrospot: 59
        memo board retrospot design: 60
        metal sign take it or leave it: 61
        mini cake stand hanging strawbery: 62
        natural slate chalkboard large: 63
        natural slate heart chalkboard: 64
        natural slate rectangle chalkboard: 65
        no singing metal sign: 66
        pack of 12 hearts design tissues: 67
        pack of 12 woodland tissues: 68
        pack of 6 birdy gift tags: 69
        pack of 60 dinosaur cake cases: 70
        pack of 60 mushroom cake cases: 71
        pack of 60 pink paisley cake cases: 72
        pack of 60 spaceboy cake cases: 73
        pack of 72 retro spot cake cases: 74
        pack of 72 skull cake cases: 75
        paper bunting retro spots: 76
        paper chain kit retro spot: 77
        party bunting: 78
        pink blue felt craft trinket box: 79
        pink fairy cake childs apron: 80
        plasters in tin circus parade: 81
        plasters in tin skulls: 82
        plasters in tin spaceboy: 83
        plasters in tin strongman: 84
        plasters in tin vintage paisley: 85
        plasters in tin woodland animals: 86
        pottering in the shed metal sign: 87
        recycling bag retrospot: 88
        red retrospot mug: 89
        red spot ceramic drawer knob: 90
        red spotty charlotte bag: 91
        red spotty round cake tins: 92
        red spotty shopper bag: 93
        red toadstool led night light: 94
        regency cakestand 3 tier: 95
        retro spot cake stand: 96
        retro spot large milk jug: 97
        retro spot small milk jug: 98
        retro spot tea set ceramic 11 pc: 99
        rex cashcarry jumbo shopper: 100
        ribbon reel spots design: 101
        round snack boxes set 4 fruits: 102
        round snack boxes set4 woodland: 103
        set 12 retro white chalk sticks: 104
        set of 3 butterfly cookie cutters: 105
        set of 3 heart cookie cutters: 106
        set of 72 pink heart paper doilies: 107
        set of 72 retro spot paper doilies: 108
        set10 pink spotty party candles: 109
        set2 red spotty tea towels: 110
        set20 red spotty paper napkins: 111
        set5 red spotty lid glass bowls: 112
        set6 red spotty paper cups: 113
        skull shoulder bag: 114
        small glass heart trinket pot: 115
        space boy birthday card: 116
        strawberry ceramic trinket box: 117
        strawberry charlotte bag: 118
        strawberry lunchbox with cutlery: 119
        sweetheart ceramic trinket box: 120
        tea bag plate red spotty: 121
        tea party birthday card: 122
        toilet metal sign: 123
        victorian glass hanging tlight: 124
        vintage heads and tails card game: 125
        vintage snap cards: 126
        vintage union jack bunting: 127
        white hanging heart tlight holder: 128
        white spot red ceramic drawer knob: 129
        white wood garden plant ladder: 130
        wood 2 drawer cabinet white finish: 131
        wood black board ant white finish: 132
        wood s3 cabinet ant white finish: 133
        wooden frame antique white: 134
        wooden happy birthday garland: 135
        wooden picture frame white finish: 136
        wooden rounders garden set: 137
        wooden school colouring set: 138
        woodland charlotte bag: 139
        world war 2 gliders asstd designs: 140
        zinc metal heart decoration: 141
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 142
        - !!python/object/apply:numpy.dtype
          args:
          - U35
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 140
          - 4
          - 8
        - false
        - !!binary |
          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
          IAAAAHMAAABpAAAAZwAAAG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAAAGwAAAB1AAAAZQAAACAAAABoAAAAYQAAAHAA
          AABwAAAAeQAAACAAAABiAAAAaQAAAHIAAAB0AAAAaAAAAGQAAABhAAAAeQAAACAAAABiAAAAdQAA
          AG4AAAB0AAAAaQAAAG4AAABnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiAAAA
          bAAAAHUAAABlAAAAIAAAAGgAAABhAAAAcgAAAG0AAABvAAAAbgAAAGkAAABjAAAAYQAAACAAAABp
          AAAAbgAAACAAAABiAAAAbwAAAHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIAAABvAAAAeAAAACAAAABvAAAAZgAAACAAAAAyAAAANAAA
          ACAAAABjAAAAbwAAAGMAAABrAAAAdAAAAGEAAABpAAAAbAAAACAAAABwAAAAYQAAAHIAAABhAAAA
          cwAAAG8AAABsAAAAcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYwAAAGgAAABh
          AAAAcgAAAGwAAABvAAAAdAAAAHQAAABlAAAAIAAAAGIAAABhAAAAZwAAACAAAABzAAAAdQAAAGsA
          AABpAAAAIAAAAGQAAABlAAAAcwAAAGkAAABnAAAAbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAABjAAAAaAAAAGkAAABsAAAAZAAAAHMAAAAgAAAAYQAAAHAAAAByAAAA
          bwAAAG4AAAAgAAAAcwAAAHAAAABhAAAAYwAAAGUAAABiAAAAbwAAAHkAAAAgAAAAZAAAAGUAAABz
          AAAAaQAAAGcAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGMAAABoAAAAbwAAAGMA
          AABvAAAAbAAAAGEAAAB0AAAAZQAAACAAAAB0AAAAaAAAAGkAAABzAAAAIAAAAHcAAABhAAAAeQAA
          ACAAAABtAAAAZQAAAHQAAABhAAAAbAAAACAAAABzAAAAaQAAAGcAAABuAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAYwAAAG8AAABsAAAAbwAAAHUAAAByAAAAIAAAAGcAAABsAAAAYQAAAHMAAABz
          AAAAIAAAAHQAAABsAAAAaQAAAGcAAABoAAAAdAAAACAAAABoAAAAbwAAAGwAAABkAAAAZQAAAHIA
          AAAgAAAAaAAAAGEAAABuAAAAZwAAAGkAAABuAAAAZwAAAAAAAABjAAAAbwAAAG8AAABrAAAAIAAA
          AHcAAABpAAAAdAAAAGgAAAAgAAAAdwAAAGkAAABuAAAAZQAAACAAAABtAAAAZQAAAHQAAABhAAAA
          bAAAACAAAABzAAAAaQAAAGcAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAGMAAAByAAAAZQAAAGEAAABtAAAAIAAAAGgAAABlAAAAYQAAAHIAAAB0AAAAIAAAAGMA
          AABhAAAAcgAAAGQAAAAgAAAAaAAAAG8AAABsAAAAZAAAAGUAAAByAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYwAAAHIAAABlAAAAYQAAAG0AAAAgAAAA
          cwAAAHcAAABlAAAAZQAAAHQAAABoAAAAZQAAAGEAAAByAAAAdAAAACAAAABtAAAAaQAAAG4AAABp
          AAAAIAAAAGMAAABoAAAAZQAAAHMAAAB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AABkAAAAbwAAAG8AAAByAAAAIAAAAG0AAABhAAAAdAAAACAAAABmAAAAYQAAAGkAAAByAAAAeQAA
          ACAAAABjAAAAYQAAAGsAAABlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQAAABvAAAAbwAAAHIAAAAgAAAAbQAAAGEAAAB0
          AAAAIAAAAGYAAABhAAAAbgAAAGMAAAB5AAAAIAAAAGYAAABvAAAAbgAAAHQAAAAgAAAAaAAAAG8A
          AABtAAAAZQAAACAAAABzAAAAdwAAAGUAAABlAAAAdAAAACAAAABoAAAAbwAAAG0AAABlAAAAZAAA
          AG8AAABvAAAAcgAAACAAAABtAAAAYQAAAHQAAAAgAAAAbgAAAGUAAAB3AAAAIAAAAGUAAABuAAAA
          ZwAAAGwAAABhAAAAbgAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkAAAAbwAAAG8AAAByAAAAIAAAAG0AAABhAAAAdAAAACAA
          AABzAAAAcAAAAG8AAAB0AAAAdAAAAHkAAAAgAAAAaAAAAG8AAABtAAAAZQAAACAAAABzAAAAdwAA
          AGUAAABlAAAAdAAAACAAAABoAAAAbwAAAG0AAABlAAAAAAAAAAAAAAAAAAAAAAAAAGQAAABvAAAA
          bwAAAHIAAAAgAAAAbQAAAGEAAAB0AAAAIAAAAHUAAABuAAAAaQAAAG8AAABuAAAAIAAAAGYAAABs
          AAAAYQAAAGcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAZAAAAG8AAABvAAAAcgAAAG0AAABhAAAAdAAAACAAAABoAAAAZQAA
          AGEAAAByAAAAdAAAAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABlAAAAZAAAAHcAAABh
          AAAAcgAAAGQAAABpAAAAYQAAAG4AAAAgAAAAcAAAAGEAAAByAAAAYQAAAHMAAABvAAAAbAAAACAA
          AABuAAAAYQAAAHQAAAB1AAAAcgAAAGEAAABsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAGYAAABhAAAAbgAAAGMAAAB5AAAAIAAAAGYAAABvAAAAbgAAAHQAAAAgAAAA
          YgAAAGkAAAByAAAAdAAAAGgAAABkAAAAYQAAAHkAAAAgAAAAYwAAAGEAAAByAAAAZAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZgAAAGUAAABsAAAAdAAAAGMA
          AAByAAAAYQAAAGYAAAB0AAAAIAAAADYAAAAgAAAAZgAAAGwAAABvAAAAdwAAAGUAAAByAAAAIAAA
          AGYAAAByAAAAaQAAAGUAAABuAAAAZAAAAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAABmAAAAZQAAAGwAAAB0AAAAYwAAAHIAAABhAAAAZgAAAHQAAAAgAAAAYgAAAHUAAAB0
          AAAAdAAAAGUAAAByAAAAZgAAAGwAAAB5AAAAIAAAAGgAAABlAAAAYQAAAHIAAAB0AAAAcwAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGYAAABlAAAAbAAAAHQAAABjAAAAcgAA
          AGEAAABmAAAAdAAAACAAAABjAAAAdQAAAHMAAABoAAAAaQAAAG8AAABuAAAAIAAAAG8AAAB3AAAA
          bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAZgAAAG8AAAB1AAAAcgAAACAAAABoAAAAbwAAAG8AAABrAAAAIAAAAHcAAABoAAAAaQAAAHQA
          AABlAAAAIAAAAGwAAABvAAAAdgAAAGUAAABiAAAAaQAAAHIAAABkAAAAcwAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABnAAAAaQAAAG4AAAAgAAAAdAAAAG8AAABuAAAA
          aQAAAGMAAAAgAAAAZAAAAGkAAABlAAAAdAAAACAAAABtAAAAZQAAAHQAAABhAAAAbAAAACAAAABz
          AAAAaQAAAGcAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgA
          AABhAAAAbgAAAGQAAAAgAAAAbwAAAHYAAABlAAAAcgAAACAAAAB0AAAAaAAAAGUAAAAgAAAAYwAA
          AGgAAABvAAAAYwAAAG8AAABsAAAAYQAAAHQAAABlAAAAIAAAAHMAAABpAAAAZwAAAG4AAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAAAGEAAABuAAAAZwAAAGkAAABuAAAAZwAAACAAAABo
          AAAAZQAAAGEAAAByAAAAdAAAACAAAAB6AAAAaQAAAG4AAABjAAAAIAAAAHQAAABsAAAAaQAAAGcA
          AABoAAAAdAAAACAAAABoAAAAbwAAAGwAAABkAAAAZQAAAHIAAAAAAAAAAAAAAAAAAABoAAAAYQAA
          AG4AAABnAAAAaQAAAG4AAABnAAAAIAAAAGoAAABhAAAAbQAAACAAAABqAAAAYQAAAHIAAAAgAAAA
          dAAAAGwAAABpAAAAZwAAAGgAAAB0AAAAIAAAAGgAAABvAAAAbAAAAGQAAABlAAAAcgAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAGgAAABhAAAAbgAAAGcAAABpAAAAbgAAAGcAAAAgAAAAbQAAAGUA
          AAB0AAAAYQAAAGwAAAAgAAAAcwAAAHQAAABhAAAAcgAAACAAAABsAAAAYQAAAG4AAAB0AAAAZQAA
          AHIAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAAAG8AAAB0AAAA
          IAAAAGIAAABhAAAAdAAAAGgAAABzAAAAIAAAAG0AAABlAAAAdAAAAGEAAABsAAAAIAAAAHMAAABp
          AAAAZwAAAG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAABpAAAAdgAAAG8AAAByAAAAeQAAACAAAABoAAAAYQAAAG4AAABnAAAAaQAA
          AG4AAABnAAAAIAAAAGQAAABlAAAAYwAAAG8AAAByAAAAYQAAAHQAAABpAAAAbwAAAG4AAAAgAAAA
          aAAAAGUAAABhAAAAcgAAAHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGoAAAB1AAAAbQAAAGIAAABv
          AAAAIAAAAGIAAABhAAAAZwAAACAAAABiAAAAYQAAAHIAAABvAAAAcQAAAHUAAABlAAAAIAAAAGIA
          AABsAAAAYQAAAGMAAABrAAAAIAAAAHcAAABoAAAAaQAAAHQAAABlAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAagAAAHUAAABtAAAAYgAAAG8AAAAgAAAAYgAAAGEAAABnAAAAIAAAAHAAAABpAAAA
          bgAAAGsAAAAgAAAAdgAAAGkAAABuAAAAdAAAAGEAAABnAAAAZQAAACAAAABwAAAAYQAAAGkAAABz
          AAAAbAAAAGUAAAB5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABqAAAAdQAAAG0AAABiAAAAbwAAACAA
          AABiAAAAYQAAAGcAAAAgAAAAcwAAAGMAAABhAAAAbgAAAGQAAABpAAAAbgAAAGEAAAB2AAAAaQAA
          AGEAAABuAAAAIAAAAHAAAABhAAAAaQAAAHMAAABsAAAAZQAAAHkAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAGoAAAB1AAAAbQAAAGIAAABvAAAAIAAAAGIAAABhAAAAZwAAACAAAABzAAAAcAAAAGEAAABj
          AAAAZQAAAGIAAABvAAAAeQAAACAAAABkAAAAZQAAAHMAAABpAAAAZwAAAG4AAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAagAAAHUAAABtAAAAYgAAAG8AAAAgAAAAYgAA
          AGEAAABnAAAAIAAAAHMAAAB0AAAAcgAAAGEAAAB3AAAAYgAAAGUAAAByAAAAcgAAAHkAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABq
          AAAAdQAAAG0AAABiAAAAbwAAACAAAABiAAAAYQAAAGcAAAAgAAAAdAAAAG8AAAB5AAAAcwAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGoAAAB1AAAAbQAAAGIAAABvAAAAIAAAAGIAAABhAAAA
          ZwAAACAAAAB3AAAAbwAAAG8AAABkAAAAbAAAAGEAAABuAAAAZAAAACAAAABhAAAAbgAAAGkAAABt
          AAAAYQAAAGwAAABzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAagAAAHUA
          AABtAAAAYgAAAG8AAAAgAAAAcwAAAGgAAABvAAAAcAAAAHAAAABlAAAAcgAAACAAAAB2AAAAaQAA
          AG4AAAB0AAAAYQAAAGcAAABlAAAAIAAAAHIAAABlAAAAZAAAACAAAABwAAAAYQAAAGkAAABzAAAA
          bAAAAGUAAAB5AAAAAAAAAAAAAABqAAAAdQAAAG0AAABiAAAAbwAAACAAAABzAAAAdAAAAG8AAABy
          AAAAYQAAAGcAAABlAAAAIAAAAGIAAABhAAAAZwAAACAAAABzAAAAawAAAHUAAABsAAAAbAAAAHMA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAAABhAAAAcgAA
          AGcAAABlAAAAIAAAAGgAAABlAAAAYQAAAHIAAAB0AAAAIAAAAG0AAABlAAAAYQAAAHMAAAB1AAAA
          cgAAAGkAAABuAAAAZwAAACAAAABzAAAAcAAAAG8AAABvAAAAbgAAAHMAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAbAAAAG8AAAB2AAAAZQAAACAAAABiAAAAdQAAAGkAAABsAAAAZAAAAGkA
          AABuAAAAZwAAACAAAABiAAAAbAAAAG8AAABjAAAAawAAACAAAAB3AAAAbwAAAHIAAABkAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAAAbwAAAHYAAABlAAAA
          YgAAAGkAAAByAAAAZAAAACAAAABoAAAAYQAAAG4AAABnAAAAaQAAAG4AAABnAAAAIAAAAGQAAABl
          AAAAYwAAAG8AAAByAAAAYQAAAHQAAABpAAAAbwAAAG4AAAAgAAAAdwAAAGgAAABpAAAAdAAAAGUA
          AAAAAAAAAAAAAGwAAAB1AAAAbgAAAGMAAABoAAAAIAAAAGIAAABhAAAAZwAAACAAAABiAAAAbAAA
          AGEAAABjAAAAawAAACAAAABzAAAAawAAAHUAAABsAAAAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAHUAAABuAAAAYwAAAGgAAAAg
          AAAAYgAAAGEAAABnAAAAIAAAAGMAAABhAAAAcgAAAHMAAAAgAAAAYgAAAGwAAAB1AAAAZQAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAABsAAAAdQAAAG4AAABjAAAAaAAAACAAAABiAAAAYQAAAGcAAAAgAAAAdwAAAG8AAABvAAAA
          ZAAAAGwAAABhAAAAbgAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAAAB1AAAAbgAAAGMAAABoAAAAYgAAAGEA
          AABnAAAAIAAAAHMAAABwAAAAYQAAAGMAAABlAAAAYgAAAG8AAAB5AAAAIAAAAGQAAABlAAAAcwAA
          AGkAAABnAAAAbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          bAAAAHUAAABuAAAAYwAAAGgAAABiAAAAYQAAAGcAAAAgAAAAcwAAAHUAAABrAAAAaQAAACAAAABk
          AAAAZQAAAHMAAABpAAAAZwAAAG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAAAdQAAAG4AAABjAAAAaAAAAGIAAABvAAAAeAAA
          ACAAAABpAAAAIAAAAGwAAABvAAAAdgAAAGUAAAAgAAAAbAAAAG8AAABuAAAAZAAAAG8AAABuAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAAAB1
          AAAAbgAAAGMAAABoAAAAYgAAAG8AAAB4AAAAIAAAAHcAAABpAAAAdAAAAGgAAAAgAAAAYwAAAHUA
          AAB0AAAAbAAAAGUAAAByAAAAeQAAACAAAAByAAAAZQAAAHQAAAByAAAAbwAAAHMAAABwAAAAbwAA
          AHQAAAAAAAAAAAAAAAAAAAAAAAAAbQAAAGUAAABtAAAAbwAAACAAAABiAAAAbwAAAGEAAAByAAAA
          ZAAAACAAAAByAAAAZQAAAHQAAAByAAAAbwAAAHMAAABwAAAAbwAAAHQAAAAgAAAAZAAAAGUAAABz
          AAAAaQAAAGcAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABtAAAAZQAAAHQA
          AABhAAAAbAAAACAAAABzAAAAaQAAAGcAAABuAAAAIAAAAHQAAABhAAAAawAAAGUAAAAgAAAAaQAA
          AHQAAAAgAAAAbwAAAHIAAAAgAAAAbAAAAGUAAABhAAAAdgAAAGUAAAAgAAAAaQAAAHQAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAG0AAABpAAAAbgAAAGkAAAAgAAAAYwAAAGEAAABrAAAAZQAAACAAAABz
          AAAAdAAAAGEAAABuAAAAZAAAACAAAABoAAAAYQAAAG4AAABnAAAAaQAAAG4AAABnAAAAIAAAAHMA
          AAB0AAAAcgAAAGEAAAB3AAAAYgAAAGUAAAByAAAAeQAAAAAAAAAAAAAAbgAAAGEAAAB0AAAAdQAA
          AHIAAABhAAAAbAAAACAAAABzAAAAbAAAAGEAAAB0AAAAZQAAACAAAABjAAAAaAAAAGEAAABsAAAA
          awAAAGIAAABvAAAAYQAAAHIAAABkAAAAIAAAAGwAAABhAAAAcgAAAGcAAABlAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAABuAAAAYQAAAHQAAAB1AAAAcgAAAGEAAABsAAAAIAAAAHMAAABsAAAAYQAAAHQA
          AABlAAAAIAAAAGgAAABlAAAAYQAAAHIAAAB0AAAAIAAAAGMAAABoAAAAYQAAAGwAAABrAAAAYgAA
          AG8AAABhAAAAcgAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG4AAABhAAAAdAAAAHUAAAByAAAA
          YQAAAGwAAAAgAAAAcwAAAGwAAABhAAAAdAAAAGUAAAAgAAAAcgAAAGUAAABjAAAAdAAAAGEAAABu
          AAAAZwAAAGwAAABlAAAAIAAAAGMAAABoAAAAYQAAAGwAAABrAAAAYgAAAG8AAABhAAAAcgAAAGQA
          AAAAAAAAbgAAAG8AAAAgAAAAcwAAAGkAAABuAAAAZwAAAGkAAABuAAAAZwAAACAAAABtAAAAZQAA
          AHQAAABhAAAAbAAAACAAAABzAAAAaQAAAGcAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAYQAAAGMAAABrAAAAIAAAAG8AAABm
          AAAAIAAAADEAAAAyAAAAIAAAAGgAAABlAAAAYQAAAHIAAAB0AAAAcwAAACAAAABkAAAAZQAAAHMA
          AABpAAAAZwAAAG4AAAAgAAAAdAAAAGkAAABzAAAAcwAAAHUAAABlAAAAcwAAAAAAAAAAAAAAAAAA
          AHAAAABhAAAAYwAAAGsAAAAgAAAAbwAAAGYAAAAgAAAAMQAAADIAAAAgAAAAdwAAAG8AAABvAAAA
          ZAAAAGwAAABhAAAAbgAAAGQAAAAgAAAAdAAAAGkAAABzAAAAcwAAAHUAAABlAAAAcwAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAAGEAAABjAAAAawAAACAAAABvAAAAZgAAACAA
          AAA2AAAAIAAAAGIAAABpAAAAcgAAAGQAAAB5AAAAIAAAAGcAAABpAAAAZgAAAHQAAAAgAAAAdAAA
          AGEAAABnAAAAcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAA
          YQAAAGMAAABrAAAAIAAAAG8AAABmAAAAIAAAADYAAAAwAAAAIAAAAGQAAABpAAAAbgAAAG8AAABz
          AAAAYQAAAHUAAAByAAAAIAAAAGMAAABhAAAAawAAAGUAAAAgAAAAYwAAAGEAAABzAAAAZQAAAHMA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAABhAAAAYwAAAGsAAAAgAAAAbwAAAGYAAAAgAAAANgAA
          ADAAAAAgAAAAbQAAAHUAAABzAAAAaAAAAHIAAABvAAAAbwAAAG0AAAAgAAAAYwAAAGEAAABrAAAA
          ZQAAACAAAABjAAAAYQAAAHMAAABlAAAAcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAAGEAAABj
          AAAAawAAACAAAABvAAAAZgAAACAAAAA2AAAAMAAAACAAAABwAAAAaQAAAG4AAABrAAAAIAAAAHAA
          AABhAAAAaQAAAHMAAABsAAAAZQAAAHkAAAAgAAAAYwAAAGEAAABrAAAAZQAAACAAAABjAAAAYQAA
          AHMAAABlAAAAcwAAAAAAAABwAAAAYQAAAGMAAABrAAAAIAAAAG8AAABmAAAAIAAAADYAAAAwAAAA
          IAAAAHMAAABwAAAAYQAAAGMAAABlAAAAYgAAAG8AAAB5AAAAIAAAAGMAAABhAAAAawAAAGUAAAAg
          AAAAYwAAAGEAAABzAAAAZQAAAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAABhAAAAYwAAAGsA
          AAAgAAAAbwAAAGYAAAAgAAAANwAAADIAAAAgAAAAcgAAAGUAAAB0AAAAcgAAAG8AAAAgAAAAcwAA
          AHAAAABvAAAAdAAAACAAAABjAAAAYQAAAGsAAABlAAAAIAAAAGMAAABhAAAAcwAAAGUAAABzAAAA
          AAAAAAAAAAAAAAAAcAAAAGEAAABjAAAAawAAACAAAABvAAAAZgAAACAAAAA3AAAAMgAAACAAAABz
          AAAAawAAAHUAAABsAAAAbAAAACAAAABjAAAAYQAAAGsAAABlAAAAIAAAAGMAAABhAAAAcwAAAGUA
          AABzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAYQAAAHAAAABlAAAAcgAA
          ACAAAABiAAAAdQAAAG4AAAB0AAAAaQAAAG4AAABnAAAAIAAAAHIAAABlAAAAdAAAAHIAAABvAAAA
          IAAAAHMAAABwAAAAbwAAAHQAAABzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAHAAAABhAAAAcAAAAGUAAAByAAAAIAAAAGMAAABoAAAAYQAAAGkAAABuAAAAIAAAAGsA
          AABpAAAAdAAAACAAAAByAAAAZQAAAHQAAAByAAAAbwAAACAAAABzAAAAcAAAAG8AAAB0AAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAAGEAAAByAAAAdAAAAHkAAAAgAAAA
          YgAAAHUAAABuAAAAdAAAAGkAAABuAAAAZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AABwAAAAaQAAAG4AAABrAAAAIAAAAGIAAABsAAAAdQAAAGUAAAAgAAAAZgAAAGUAAABsAAAAdAAA
          ACAAAABjAAAAcgAAAGEAAABmAAAAdAAAACAAAAB0AAAAcgAAAGkAAABuAAAAawAAAGUAAAB0AAAA
          IAAAAGIAAABvAAAAeAAAAAAAAAAAAAAAAAAAAHAAAABpAAAAbgAAAGsAAAAgAAAAZgAAAGEAAABp
          AAAAcgAAAHkAAAAgAAAAYwAAAGEAAABrAAAAZQAAACAAAABjAAAAaAAAAGkAAABsAAAAZAAAAHMA
          AAAgAAAAYQAAAHAAAAByAAAAbwAAAG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAA
          AGwAAABhAAAAcwAAAHQAAABlAAAAcgAAAHMAAAAgAAAAaQAAAG4AAAAgAAAAdAAAAGkAAABuAAAA
          IAAAAGMAAABpAAAAcgAAAGMAAAB1AAAAcwAAACAAAABwAAAAYQAAAHIAAABhAAAAZAAAAGUAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAbAAAAGEAAABzAAAAdAAAAGUAAAByAAAAcwAAACAA
          AABpAAAAbgAAACAAAAB0AAAAaQAAAG4AAAAgAAAAcwAAAGsAAAB1AAAAbAAAAGwAAABzAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAABsAAAA
          YQAAAHMAAAB0AAAAZQAAAHIAAABzAAAAIAAAAGkAAABuAAAAIAAAAHQAAABpAAAAbgAAACAAAABz
          AAAAcAAAAGEAAABjAAAAZQAAAGIAAABvAAAAeQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAcAAAAGwAAABhAAAAcwAAAHQAAABlAAAAcgAAAHMAAAAgAAAAaQAA
          AG4AAAAgAAAAdAAAAGkAAABuAAAAIAAAAHMAAAB0AAAAcgAAAG8AAABuAAAAZwAAAG0AAABhAAAA
          bgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAbAAAAGEAAABz
          AAAAdAAAAGUAAAByAAAAcwAAACAAAABpAAAAbgAAACAAAAB0AAAAaQAAAG4AAAAgAAAAdgAAAGkA
          AABuAAAAdAAAAGEAAABnAAAAZQAAACAAAABwAAAAYQAAAGkAAABzAAAAbAAAAGUAAAB5AAAAAAAA
          AAAAAAAAAAAAAAAAAHAAAABsAAAAYQAAAHMAAAB0AAAAZQAAAHIAAABzAAAAIAAAAGkAAABuAAAA
          IAAAAHQAAABpAAAAbgAAACAAAAB3AAAAbwAAAG8AAABkAAAAbAAAAGEAAABuAAAAZAAAACAAAABh
          AAAAbgAAAGkAAABtAAAAYQAAAGwAAABzAAAAAAAAAAAAAAAAAAAAcAAAAG8AAAB0AAAAdAAAAGUA
          AAByAAAAaQAAAG4AAABnAAAAIAAAAGkAAABuAAAAIAAAAHQAAABoAAAAZQAAACAAAABzAAAAaAAA
          AGUAAABkAAAAIAAAAG0AAABlAAAAdAAAAGEAAABsAAAAIAAAAHMAAABpAAAAZwAAAG4AAAAAAAAA
          AAAAAAAAAAByAAAAZQAAAGMAAAB5AAAAYwAAAGwAAABpAAAAbgAAAGcAAAAgAAAAYgAAAGEAAABn
          AAAAIAAAAHIAAABlAAAAdAAAAHIAAABvAAAAcwAAAHAAAABvAAAAdAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHIAAABlAAAAZAAAACAAAAByAAAAZQAA
          AHQAAAByAAAAbwAAAHMAAABwAAAAbwAAAHQAAAAgAAAAbQAAAHUAAABnAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAcgAAAGUAAABkAAAAIAAAAHMAAABwAAAAbwAAAHQAAAAgAAAAYwAAAGUAAAByAAAAYQAAAG0A
          AABpAAAAYwAAACAAAABkAAAAcgAAAGEAAAB3AAAAZQAAAHIAAAAgAAAAawAAAG4AAABvAAAAYgAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAByAAAAZQAAAGQAAAAgAAAAcwAAAHAAAABvAAAA
          dAAAAHQAAAB5AAAAIAAAAGMAAABoAAAAYQAAAHIAAABsAAAAbwAAAHQAAAB0AAAAZQAAACAAAABi
          AAAAYQAAAGcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHIA
          AABlAAAAZAAAACAAAABzAAAAcAAAAG8AAAB0AAAAdAAAAHkAAAAgAAAAcgAAAG8AAAB1AAAAbgAA
          AGQAAAAgAAAAYwAAAGEAAABrAAAAZQAAACAAAAB0AAAAaQAAAG4AAABzAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcgAAAGUAAABkAAAAIAAAAHMAAABwAAAAbwAAAHQAAAB0
          AAAAeQAAACAAAABzAAAAaAAAAG8AAABwAAAAcAAAAGUAAAByAAAAIAAAAGIAAABhAAAAZwAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAByAAAAZQAA
          AGQAAAAgAAAAdAAAAG8AAABhAAAAZAAAAHMAAAB0AAAAbwAAAG8AAABsAAAAIAAAAGwAAABlAAAA
          ZAAAACAAAABuAAAAaQAAAGcAAABoAAAAdAAAACAAAABsAAAAaQAAAGcAAABoAAAAdAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAHIAAABlAAAAZwAAAGUAAABuAAAAYwAAAHkAAAAgAAAAYwAAAGEA
          AABrAAAAZQAAAHMAAAB0AAAAYQAAAG4AAABkAAAAIAAAADMAAAAgAAAAdAAAAGkAAABlAAAAcgAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcgAAAGUAAAB0AAAA
          cgAAAG8AAAAgAAAAcwAAAHAAAABvAAAAdAAAACAAAABjAAAAYQAAAGsAAABlAAAAIAAAAHMAAAB0
          AAAAYQAAAG4AAABkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAByAAAAZQAAAHQAAAByAAAAbwAAACAAAABzAAAAcAAAAG8AAAB0AAAAIAAA
          AGwAAABhAAAAcgAAAGcAAABlAAAAIAAAAG0AAABpAAAAbAAAAGsAAAAgAAAAagAAAHUAAABnAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHIAAABlAAAAdAAAAHIAAABv
          AAAAIAAAAHMAAABwAAAAbwAAAHQAAAAgAAAAcwAAAG0AAABhAAAAbAAAAGwAAAAgAAAAbQAAAGkA
          AABsAAAAawAAACAAAABqAAAAdQAAAGcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAcgAAAGUAAAB0AAAAcgAAAG8AAAAgAAAAcwAAAHAAAABvAAAAdAAAACAAAAB0AAAA
          ZQAAAGEAAAAgAAAAcwAAAGUAAAB0AAAAIAAAAGMAAABlAAAAcgAAAGEAAABtAAAAaQAAAGMAAAAg
          AAAAMQAAADEAAAAgAAAAcAAAAGMAAAAAAAAAAAAAAAAAAAByAAAAZQAAAHgAAAAgAAAAYwAAAGEA
          AABzAAAAaAAAAGMAAABhAAAAcgAAAHIAAAB5AAAAIAAAAGoAAAB1AAAAbQAAAGIAAABvAAAAIAAA
          AHMAAABoAAAAbwAAAHAAAABwAAAAZQAAAHIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAHIAAABpAAAAYgAAAGIAAABvAAAAbgAAACAAAAByAAAAZQAAAGUAAABsAAAAIAAAAHMAAABw
          AAAAbwAAAHQAAABzAAAAIAAAAGQAAABlAAAAcwAAAGkAAABnAAAAbgAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcgAAAG8AAAB1AAAAbgAAAGQAAAAgAAAAcwAA
          AG4AAABhAAAAYwAAAGsAAAAgAAAAYgAAAG8AAAB4AAAAZQAAAHMAAAAgAAAAcwAAAGUAAAB0AAAA
          IAAAADQAAAAgAAAAZgAAAHIAAAB1AAAAaQAAAHQAAABzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABy
          AAAAbwAAAHUAAABuAAAAZAAAACAAAABzAAAAbgAAAGEAAABjAAAAawAAACAAAABiAAAAbwAAAHgA
          AABlAAAAcwAAACAAAABzAAAAZQAAAHQAAAA0AAAAIAAAAHcAAABvAAAAbwAAAGQAAABsAAAAYQAA
          AG4AAABkAAAAAAAAAAAAAAAAAAAAAAAAAHMAAABlAAAAdAAAACAAAAAxAAAAMgAAACAAAAByAAAA
          ZQAAAHQAAAByAAAAbwAAACAAAAB3AAAAaAAAAGkAAAB0AAAAZQAAACAAAABjAAAAaAAAAGEAAABs
          AAAAawAAACAAAABzAAAAdAAAAGkAAABjAAAAawAAAHMAAAAAAAAAAAAAAAAAAAAAAAAAcwAAAGUA
          AAB0AAAAIAAAAG8AAABmAAAAIAAAADMAAAAgAAAAYgAAAHUAAAB0AAAAdAAAAGUAAAByAAAAZgAA
          AGwAAAB5AAAAIAAAAGMAAABvAAAAbwAAAGsAAABpAAAAZQAAACAAAABjAAAAdQAAAHQAAAB0AAAA
          ZQAAAHIAAABzAAAAAAAAAAAAAABzAAAAZQAAAHQAAAAgAAAAbwAAAGYAAAAgAAAAMwAAACAAAABo
          AAAAZQAAAGEAAAByAAAAdAAAACAAAABjAAAAbwAAAG8AAABrAAAAaQAAAGUAAAAgAAAAYwAAAHUA
          AAB0AAAAdAAAAGUAAAByAAAAcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHMAAABlAAAAdAAA
          ACAAAABvAAAAZgAAACAAAAA3AAAAMgAAACAAAABwAAAAaQAAAG4AAABrAAAAIAAAAGgAAABlAAAA
          YQAAAHIAAAB0AAAAIAAAAHAAAABhAAAAcAAAAGUAAAByAAAAIAAAAGQAAABvAAAAaQAAAGwAAABp
          AAAAZQAAAHMAAAAAAAAAcwAAAGUAAAB0AAAAIAAAAG8AAABmAAAAIAAAADcAAAAyAAAAIAAAAHIA
          AABlAAAAdAAAAHIAAABvAAAAIAAAAHMAAABwAAAAbwAAAHQAAAAgAAAAcAAAAGEAAABwAAAAZQAA
          AHIAAAAgAAAAZAAAAG8AAABpAAAAbAAAAGkAAABlAAAAcwAAAAAAAABzAAAAZQAAAHQAAAAxAAAA
          MAAAACAAAABwAAAAaQAAAG4AAABrAAAAIAAAAHMAAABwAAAAbwAAAHQAAAB0AAAAeQAAACAAAABw
          AAAAYQAAAHIAAAB0AAAAeQAAACAAAABjAAAAYQAAAG4AAABkAAAAbAAAAGUAAABzAAAAAAAAAAAA
          AAAAAAAAAAAAAHMAAABlAAAAdAAAADIAAAAgAAAAcgAAAGUAAABkAAAAIAAAAHMAAABwAAAAbwAA
          AHQAAAB0AAAAeQAAACAAAAB0AAAAZQAAAGEAAAAgAAAAdAAAAG8AAAB3AAAAZQAAAGwAAABzAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcwAAAGUAAAB0AAAAMgAAADAAAAAg
          AAAAcgAAAGUAAABkAAAAIAAAAHMAAABwAAAAbwAAAHQAAAB0AAAAeQAAACAAAABwAAAAYQAAAHAA
          AABlAAAAcgAAACAAAABuAAAAYQAAAHAAAABrAAAAaQAAAG4AAABzAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAABzAAAAZQAAAHQAAAA1AAAAIAAAAHIAAABlAAAAZAAAACAAAABzAAAAcAAAAG8AAAB0AAAA
          dAAAAHkAAAAgAAAAbAAAAGkAAABkAAAAIAAAAGcAAABsAAAAYQAAAHMAAABzAAAAIAAAAGIAAABv
          AAAAdwAAAGwAAABzAAAAAAAAAAAAAAAAAAAAAAAAAHMAAABlAAAAdAAAADYAAAAgAAAAcgAAAGUA
          AABkAAAAIAAAAHMAAABwAAAAbwAAAHQAAAB0AAAAeQAAACAAAABwAAAAYQAAAHAAAABlAAAAcgAA
          ACAAAABjAAAAdQAAAHAAAABzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          cwAAAGsAAAB1AAAAbAAAAGwAAAAgAAAAcwAAAGgAAABvAAAAdQAAAGwAAABkAAAAZQAAAHIAAAAg
          AAAAYgAAAGEAAABnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABzAAAAbQAAAGEAAABsAAAAbAAAACAAAABnAAAAbAAA
          AGEAAABzAAAAcwAAACAAAABoAAAAZQAAAGEAAAByAAAAdAAAACAAAAB0AAAAcgAAAGkAAABuAAAA
          awAAAGUAAAB0AAAAIAAAAHAAAABvAAAAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHMAAABw
          AAAAYQAAAGMAAABlAAAAIAAAAGIAAABvAAAAeQAAACAAAABiAAAAaQAAAHIAAAB0AAAAaAAAAGQA
          AABhAAAAeQAAACAAAABjAAAAYQAAAHIAAABkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAcwAAAHQAAAByAAAAYQAAAHcAAABiAAAAZQAAAHIAAAByAAAA
          eQAAACAAAABjAAAAZQAAAHIAAABhAAAAbQAAAGkAAABjAAAAIAAAAHQAAAByAAAAaQAAAG4AAABr
          AAAAZQAAAHQAAAAgAAAAYgAAAG8AAAB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABzAAAAdAAAAHIA
          AABhAAAAdwAAAGIAAABlAAAAcgAAAHIAAAB5AAAAIAAAAGMAAABoAAAAYQAAAHIAAABsAAAAbwAA
          AHQAAAB0AAAAZQAAACAAAABiAAAAYQAAAGcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAHMAAAB0AAAAcgAAAGEAAAB3AAAAYgAAAGUAAAByAAAAcgAAAHkAAAAg
          AAAAbAAAAHUAAABuAAAAYwAAAGgAAABiAAAAbwAAAHgAAAAgAAAAdwAAAGkAAAB0AAAAaAAAACAA
          AABjAAAAdQAAAHQAAABsAAAAZQAAAHIAAAB5AAAAAAAAAAAAAAAAAAAAcwAAAHcAAABlAAAAZQAA
          AHQAAABoAAAAZQAAAGEAAAByAAAAdAAAACAAAABjAAAAZQAAAHIAAABhAAAAbQAAAGkAAABjAAAA
          IAAAAHQAAAByAAAAaQAAAG4AAABrAAAAZQAAAHQAAAAgAAAAYgAAAG8AAAB4AAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAB0AAAAZQAAAGEAAAAgAAAAYgAAAGEAAABnAAAAIAAAAHAAAABsAAAAYQAAAHQA
          AABlAAAAIAAAAHIAAABlAAAAZAAAACAAAABzAAAAcAAAAG8AAAB0AAAAdAAAAHkAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQAAABlAAAAYQAAACAAAABwAAAA
          YQAAAHIAAAB0AAAAeQAAACAAAABiAAAAaQAAAHIAAAB0AAAAaAAAAGQAAABhAAAAeQAAACAAAABj
          AAAAYQAAAHIAAABkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAdAAAAG8AAABpAAAAbAAAAGUAAAB0AAAAIAAAAG0AAABlAAAAdAAAAGEAAABsAAAAIAAA
          AHMAAABpAAAAZwAAAG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2AAAAaQAAAGMAAAB0AAAAbwAAAHIAAABp
          AAAAYQAAAG4AAAAgAAAAZwAAAGwAAABhAAAAcwAAAHMAAAAgAAAAaAAAAGEAAABuAAAAZwAAAGkA
          AABuAAAAZwAAACAAAAB0AAAAbAAAAGkAAABnAAAAaAAAAHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AHYAAABpAAAAbgAAAHQAAABhAAAAZwAAAGUAAAAgAAAAaAAAAGUAAABhAAAAZAAAAHMAAAAgAAAA
          YQAAAG4AAABkAAAAIAAAAHQAAABhAAAAaQAAAGwAAABzAAAAIAAAAGMAAABhAAAAcgAAAGQAAAAg
          AAAAZwAAAGEAAABtAAAAZQAAAAAAAAAAAAAAdgAAAGkAAABuAAAAdAAAAGEAAABnAAAAZQAAACAA
          AABzAAAAbgAAAGEAAABwAAAAIAAAAGMAAABhAAAAcgAAAGQAAABzAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2AAAA
          aQAAAG4AAAB0AAAAYQAAAGcAAABlAAAAIAAAAHUAAABuAAAAaQAAAG8AAABuAAAAIAAAAGoAAABh
          AAAAYwAAAGsAAAAgAAAAYgAAAHUAAABuAAAAdAAAAGkAAABuAAAAZwAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHcAAABoAAAAaQAAAHQAAABlAAAAIAAAAGgAAABhAAAAbgAA
          AGcAAABpAAAAbgAAAGcAAAAgAAAAaAAAAGUAAABhAAAAcgAAAHQAAAAgAAAAdAAAAGwAAABpAAAA
          ZwAAAGgAAAB0AAAAIAAAAGgAAABvAAAAbAAAAGQAAABlAAAAcgAAAAAAAAAAAAAAdwAAAGgAAABp
          AAAAdAAAAGUAAAAgAAAAcwAAAHAAAABvAAAAdAAAACAAAAByAAAAZQAAAGQAAAAgAAAAYwAAAGUA
          AAByAAAAYQAAAG0AAABpAAAAYwAAACAAAABkAAAAcgAAAGEAAAB3AAAAZQAAAHIAAAAgAAAAawAA
          AG4AAABvAAAAYgAAAAAAAAB3AAAAaAAAAGkAAAB0AAAAZQAAACAAAAB3AAAAbwAAAG8AAABkAAAA
          IAAAAGcAAABhAAAAcgAAAGQAAABlAAAAbgAAACAAAABwAAAAbAAAAGEAAABuAAAAdAAAACAAAABs
          AAAAYQAAAGQAAABkAAAAZQAAAHIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHcAAABvAAAAbwAAAGQA
          AAAgAAAAMgAAACAAAABkAAAAcgAAAGEAAAB3AAAAZQAAAHIAAAAgAAAAYwAAAGEAAABiAAAAaQAA
          AG4AAABlAAAAdAAAACAAAAB3AAAAaAAAAGkAAAB0AAAAZQAAACAAAABmAAAAaQAAAG4AAABpAAAA
          cwAAAGgAAAAAAAAAdwAAAG8AAABvAAAAZAAAACAAAABiAAAAbAAAAGEAAABjAAAAawAAACAAAABi
          AAAAbwAAAGEAAAByAAAAZAAAACAAAABhAAAAbgAAAHQAAAAgAAAAdwAAAGgAAABpAAAAdAAAAGUA
          AAAgAAAAZgAAAGkAAABuAAAAaQAAAHMAAABoAAAAAAAAAAAAAAB3AAAAbwAAAG8AAABkAAAAIAAA
          AHMAAAAzAAAAIAAAAGMAAABhAAAAYgAAAGkAAABuAAAAZQAAAHQAAAAgAAAAYQAAAG4AAAB0AAAA
          IAAAAHcAAABoAAAAaQAAAHQAAABlAAAAIAAAAGYAAABpAAAAbgAAAGkAAABzAAAAaAAAAAAAAAAA
          AAAAAAAAAHcAAABvAAAAbwAAAGQAAABlAAAAbgAAACAAAABmAAAAcgAAAGEAAABtAAAAZQAAACAA
          AABhAAAAbgAAAHQAAABpAAAAcQAAAHUAAABlAAAAIAAAAHcAAABoAAAAaQAAAHQAAABlAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdwAAAG8AAABvAAAAZAAAAGUAAABuAAAA
          IAAAAGgAAABhAAAAcAAAAHAAAAB5AAAAIAAAAGIAAABpAAAAcgAAAHQAAABoAAAAZAAAAGEAAAB5
          AAAAIAAAAGcAAABhAAAAcgAAAGwAAABhAAAAbgAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAB3AAAAbwAAAG8AAABkAAAAZQAAAG4AAAAgAAAAcAAAAGkAAABjAAAAdAAAAHUAAAByAAAAZQAA
          ACAAAABmAAAAcgAAAGEAAABtAAAAZQAAACAAAAB3AAAAaAAAAGkAAAB0AAAAZQAAACAAAABmAAAA
          aQAAAG4AAABpAAAAcwAAAGgAAAAAAAAAAAAAAHcAAABvAAAAbwAAAGQAAABlAAAAbgAAACAAAABy
          AAAAbwAAAHUAAABuAAAAZAAAAGUAAAByAAAAcwAAACAAAABnAAAAYQAAAHIAAABkAAAAZQAAAG4A
          AAAgAAAAcwAAAGUAAAB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdwAA
          AG8AAABvAAAAZAAAAGUAAABuAAAAIAAAAHMAAABjAAAAaAAAAG8AAABvAAAAbAAAACAAAABjAAAA
          bwAAAGwAAABvAAAAdQAAAHIAAABpAAAAbgAAAGcAAAAgAAAAcwAAAGUAAAB0AAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB3AAAAbwAAAG8AAABkAAAAbAAAAGEAAABuAAAAZAAAACAA
          AABjAAAAaAAAAGEAAAByAAAAbAAAAG8AAAB0AAAAdAAAAGUAAAAgAAAAYgAAAGEAAABnAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHcAAABvAAAA
          cgAAAGwAAABkAAAAIAAAAHcAAABhAAAAcgAAACAAAAAyAAAAIAAAAGcAAABsAAAAaQAAAGQAAABl
          AAAAcgAAAHMAAAAgAAAAYQAAAHMAAABzAAAAdAAAAGQAAAAgAAAAZAAAAGUAAABzAAAAaQAAAGcA
          AABuAAAAcwAAAAAAAAAAAAAAegAAAGkAAABuAAAAYwAAACAAAABtAAAAZQAAAHQAAABhAAAAbAAA
          ACAAAABoAAAAZQAAAGEAAAByAAAAdAAAACAAAABkAAAAZQAAAGMAAABvAAAAcgAAAGEAAAB0AAAA
          aQAAAG8AAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
      warn: true
  constant_fill_strategy: null
  group_ids:
  - Description
  lags: null
  max_encoder_length: 30
  max_prediction_length: 7
  min_encoder_length: 30
  min_prediction_idx: !!python/object/apply:numpy._core.multiarray.scalar
  - &id002 !!python/object/apply:numpy.dtype
    args:
    - i8
    - false
    - true
    state: !!python/tuple
    - 3
    - <
    - null
    - null
    - null
    - -1
    - -1
    - 0
  - !!binary |
    AQAAAAAAAAA=
  min_prediction_length: 7
  predict_mode: false
  randomize_length: null
  scalers:
    AvgPricePerUnitPounds: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - &id004 !!python/object/apply:numpy.dtype
          args:
          - O8
          - false
          - true
          state: !!python/tuple
          - 3
          - '|'
          - null
          - null
          - null
          - -1
          - -1
          - 63
        - false
        - - AvgPricePerUnitPounds
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - &id003 !!python/object/apply:numpy.dtype
          args:
          - f8
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - -1
          - -1
          - 0
        - false
        - !!binary |
          CAi9NJMyB0A=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        FHgBAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          PU82d57SB0A=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          rHVLDi68IUA=
      with_mean: true
      with_std: true
    CCI: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - CCI
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          pTUwjI0uWUA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        FHgBAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          A5FlmpJL6j8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          hGu4tICb5T8=
      with_mean: true
      with_std: true
    CPI: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - CPI
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          U9GqSxXtVkA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        FHgBAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          yWylHX/n9j8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          U234fdlkAEA=
      with_mean: true
      with_std: true
    DayBeforeUnitsSold: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - DayBeforeUnitsSold
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          EndBMZVxPEA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        FHgBAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          LiXnL6JBV0A=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          xeX0wt/mwEA=
      with_mean: true
      with_std: true
    DayBeforeUnitsSold_x_IsHoliday: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - DayBeforeUnitsSold_x_IsHoliday
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          TnUv6mak4z8=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        FHgBAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          mGwaMY4kJEA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          ka6O/7ZbWUA=
      with_mean: true
      with_std: true
    DayBeforeUnitsSold_x_IsWeekend: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - DayBeforeUnitsSold_x_IsWeekend
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          1EKxLpIQEUA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        FHgBAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          L7zs6CQsQEA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          0rMvncNYkEA=
      with_mean: true
      with_std: true
    InterestRate: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - InterestRate
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          IB7VAGUS4D8=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        FHgBAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          3HNkvaiJnj8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          Xc5rk2wkTT8=
      with_mean: true
      with_std: true
    Rolling3DayMeanUnitsSold: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - Rolling3DayMeanUnitsSold
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          ot4CysN4PEA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        FHgBAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          E/50+waZTUA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          RCGKcjhgq0A=
      with_mean: true
      with_std: true
    Rolling3DayMeanUnitsSold_x_IsHoliday: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - Rolling3DayMeanUnitsSold_x_IsHoliday
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          9c3VwxWr4D8=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        FHgBAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          x2evGBV4HkA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          mO6PLOoCTUA=
      with_mean: true
      with_std: true
    Rolling3DayMeanUnitsSold_x_IsWeekend: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - Rolling3DayMeanUnitsSold_x_IsWeekend
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          5ZrswUo+IUA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        FHgBAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          mN12k/iVQUA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          d/0s7i1Uk0A=
      with_mean: true
      with_std: true
    Rolling7DayMeanUnitsSold: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - Rolling7DayMeanUnitsSold
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          enLpSBpvPEA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        FHgBAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          Gcl6HTfvRUA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          +96wLOkRnkA=
      with_mean: true
      with_std: true
    Rolling7DayMeanUnitsSold_x_IsHoliday: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - Rolling7DayMeanUnitsSold_x_IsHoliday
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          KmXSHuHA6T8=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        FHgBAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          J/ORPlMZIEA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          hIj4ks4yUEA=
      with_mean: true
      with_std: true
    Rolling7DayMeanUnitsSold_x_IsWeekend: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - Rolling7DayMeanUnitsSold_x_IsWeekend
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          5cBKBpFOIEA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        FHgBAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          jGP8LEywOkA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          +U++D0dChkA=
      with_mean: true
      with_std: true
    Unemployment: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - Unemployment
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          +4hryI+4H0A=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        FHgBAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          ctPkOuGZxz8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          uGCdvBdooT8=
      with_mean: true
      with_std: true
    WeekBeforeUnitsSold: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - WeekBeforeUnitsSold
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          g/WR4QhZPEA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        FHgBAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          rKW9EaUPV0A=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          8L6U74SewEA=
      with_mean: true
      with_std: true
    WeekBeforeUnitsSold_x_IsHoliday: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - WeekBeforeUnitsSold_x_IsHoliday
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          XVnW26cS8j8=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        FHgBAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          LyywzJnJM0A=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          KZgfdLl4eEA=
      with_mean: true
      with_std: true
    WeekBeforeUnitsSold_x_IsWeekend: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - WeekBeforeUnitsSold_x_IsWeekend
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          uZStQHO8BkA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        FHgBAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          VMsT1SLTM0A=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          pcEO4VSQeEA=
      with_mean: true
      with_std: true
    relative_time_idx: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - relative_time_idx
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AAAAAAAAAAA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        FHgBAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AAAAAAAA8D8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AAAAAAAAAAA=
      with_mean: true
      with_std: true
  static_categoricals:
  - Description
  static_reals: []
  target: UnitsSold
  target_normalizer: &id012 !!python/object:pytorch_forecasting.data.encoders.TorchNormalizer
    _method_kwargs: {}
    center: false
    center_: !!python/object/apply:numpy._core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple []
      - &id005 !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        AAAAAA==
    method: identity
    method_kwargs: null
    scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple []
      - *id005
      - false
      - !!binary |
        AACAPw==
    transformation: null
  time_idx: TimeIdx
  time_varying_known_categoricals:
  - IsWeekend
  - IsHoliday
  - DayOfWeek
  - Month
  - Quarter
  time_varying_known_reals:
  - AvgPricePerUnitPounds
  - CCI
  - CPI
  - InterestRate
  - Unemployment
  time_varying_unknown_categoricals: null
  time_varying_unknown_reals:
  - UnitsSold
  - DayBeforeUnitsSold
  - WeekBeforeUnitsSold
  - Rolling3DayMeanUnitsSold
  - Rolling7DayMeanUnitsSold
  - DayBeforeUnitsSold_x_IsWeekend
  - DayBeforeUnitsSold_x_IsHoliday
  - WeekBeforeUnitsSold_x_IsWeekend
  - WeekBeforeUnitsSold_x_IsHoliday
  - Rolling3DayMeanUnitsSold_x_IsWeekend
  - Rolling3DayMeanUnitsSold_x_IsHoliday
  - Rolling7DayMeanUnitsSold_x_IsWeekend
  - Rolling7DayMeanUnitsSold_x_IsHoliday
  variable_groups: null
  weight: null
dropout: 0.22163749376451955
embedding_labels:
  DayOfWeek: *id006
  Description: *id007
  IsHoliday: *id008
  IsWeekend: *id009
  Month: *id010
  Quarter: *id011
embedding_paddings: []
embedding_sizes:
  DayOfWeek: !!python/tuple
  - 7
  - 5
  Description: !!python/tuple
  - 142
  - 26
  IsHoliday: !!python/tuple
  - 2
  - 1
  IsWeekend: !!python/tuple
  - 2
  - 1
  Month: !!python/tuple
  - 12
  - 6
  Quarter: !!python/tuple
  - 4
  - 3
hidden_continuous_size: 14
hidden_continuous_sizes: {}
hidden_size: 20
learning_rate: 0.008371618696475694
log_gradient_flow: false
log_interval: 10
log_val_interval: null
lstm_layers: 1
max_encoder_length: 30
monotone_constaints: {}
monotone_constraints: {}
optimizer: ranger
optimizer_params: null
output_size: 2
output_transformer: *id012
reduce_on_plateau_min_lr: 1.0e-05
reduce_on_plateau_patience: 4
reduce_on_plateau_reduction: 2.0
share_single_variable_networks: false
static_categoricals:
- Description
static_reals: []
time_varying_categoricals_decoder:
- IsWeekend
- IsHoliday
- DayOfWeek
- Month
- Quarter
time_varying_categoricals_encoder:
- IsWeekend
- IsHoliday
- DayOfWeek
- Month
- Quarter
time_varying_reals_decoder:
- AvgPricePerUnitPounds
- CCI
- CPI
- InterestRate
- Unemployment
- relative_time_idx
time_varying_reals_encoder:
- AvgPricePerUnitPounds
- CCI
- CPI
- InterestRate
- Unemployment
- relative_time_idx
- UnitsSold
- DayBeforeUnitsSold
- WeekBeforeUnitsSold
- Rolling3DayMeanUnitsSold
- Rolling7DayMeanUnitsSold
- DayBeforeUnitsSold_x_IsWeekend
- DayBeforeUnitsSold_x_IsHoliday
- WeekBeforeUnitsSold_x_IsWeekend
- WeekBeforeUnitsSold_x_IsHoliday
- Rolling3DayMeanUnitsSold_x_IsWeekend
- Rolling3DayMeanUnitsSold_x_IsHoliday
- Rolling7DayMeanUnitsSold_x_IsWeekend
- Rolling7DayMeanUnitsSold_x_IsHoliday
weight_decay: 0.0
x_categoricals:
- Description
- IsWeekend
- IsHoliday
- DayOfWeek
- Month
- Quarter
x_reals:
- AvgPricePerUnitPounds
- CCI
- CPI
- InterestRate
- Unemployment
- relative_time_idx
- UnitsSold
- DayBeforeUnitsSold
- WeekBeforeUnitsSold
- Rolling3DayMeanUnitsSold
- Rolling7DayMeanUnitsSold
- DayBeforeUnitsSold_x_IsWeekend
- DayBeforeUnitsSold_x_IsHoliday
- WeekBeforeUnitsSold_x_IsWeekend
- WeekBeforeUnitsSold_x_IsHoliday
- Rolling3DayMeanUnitsSold_x_IsWeekend
- Rolling3DayMeanUnitsSold_x_IsHoliday
- Rolling7DayMeanUnitsSold_x_IsWeekend
- Rolling7DayMeanUnitsSold_x_IsHoliday
